{"version":3,"file":"static/js/187.2654ec9d.chunk.js","mappings":"uKAKA,MAyEA,EAzEmBA,KACf,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAGnCK,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAAMC,IAAI,0CACLC,MAAMC,IACHV,EAAeU,EAASC,KAAK,IAEhCC,OAAOR,IACJC,EAASD,EAAMS,SACfC,QAAQV,MAAM,8BAA+BA,EAAM,GACrD,GACP,IAEH,MAaMW,EA1Be,EA0BGb,EAClBc,EAAmBD,EA3BJ,EA4BfE,EAAelB,EAAYmB,MAAMF,EAAkBD,GAEzD,OACII,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACTC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBF,SAAA,EACjCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oCACHjB,IAASkB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeF,SAAA,CAAC,iBAAKjB,MAC5Ce,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,SAC3BJ,EAAaO,KAAI,CAACC,EAAYC,KAC3BJ,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,kBAAiBF,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKQ,IAAG,sBAAAC,OAAwBH,EAAWI,WAAaC,IAAKL,EAAWM,QACxEZ,EAAAA,EAAAA,KAAA,MAAAE,SAAKI,EAAWM,QAChBZ,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAWO,WACfV,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BAAOI,EAAWQ,cAJfP,QAUlBJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYF,SAAA,EACvBF,EAAAA,EAAAA,KAAA,UACIe,QApCOC,KACnBjC,EAAc,GACdC,EAAeD,EAAc,EACjC,EAkCgBkC,SAA0B,IAAhBlC,EACVqB,UAAU,mBAAkBF,SAC/B,YAGDF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,iBAAgBF,SAAEnB,KAClCiB,EAAAA,EAAAA,KAAA,UACIe,QAtCGG,KACfnC,EAAcoC,KAAKC,KAAKxC,EAAYyC,OApBvB,IAqBbrC,EAAeD,EAAc,EACjC,EAoCgBkC,SAAUlC,IAAgBoC,KAAKC,KAAKxC,EAAYyC,OA1D/C,GA2DDjB,UAAU,mBAAkBF,SAC/B,kBAKE,C","sources":["pages/Find_store.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DiningLayout from '../layouts/DiningLayout';\r\nimport \"../css/Find_store.css\";\r\n\r\nconst Find_store = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [error, setError] = useState('');\r\n    const itemsPerPage = 8;\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:18080/api/restaurants')\r\n            .then((response) => {\r\n                setRestaurants(response.data);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message);\r\n                console.error(\"Error fetching restaurants:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    const handleNextPage = () => {\r\n        if (currentPage < Math.ceil(restaurants.length / itemsPerPage)) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    // Calculate current page items\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = restaurants.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"find-store-container\">\r\n                <h1>식당 리스트</h1>\r\n                {error && <p className=\"error-message\">오류: {error}</p>}\r\n                <div className=\"restaurant-list\">\r\n                    {currentItems.map((restaurant, index) => (\r\n                        <div key={index} className=\"restaurant-card\">\r\n                            <img src={`/images/restaurant/${restaurant.photoName}`} alt={restaurant.name} />\r\n                            <h2>{restaurant.name}</h2>\r\n                            <p>{restaurant.address}</p>\r\n                            <p>대표메뉴: {restaurant.category}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Pagination using arrow buttons */}\r\n                <div className=\"pagination\">\r\n                    <button\r\n                        onClick={handlePreviousPage}\r\n                        disabled={currentPage === 1}\r\n                        className=\"pagination-arrow\"\r\n                    >\r\n                        ◀\r\n                    </button>\r\n                    <span className=\"page-indicator\">{currentPage}</span>\r\n                    <button\r\n                        onClick={handleNextPage}\r\n                        disabled={currentPage === Math.ceil(restaurants.length / itemsPerPage)}\r\n                        className=\"pagination-arrow\"\r\n                    >\r\n                        ▶\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Find_store;"],"names":["Find_store","restaurants","setRestaurants","useState","currentPage","setCurrentPage","error","setError","useEffect","axios","get","then","response","data","catch","message","console","indexOfLastItem","indexOfFirstItem","currentItems","slice","_jsx","DiningLayout","children","_jsxs","className","map","restaurant","index","src","concat","photoName","alt","name","address","category","onClick","handlePreviousPage","disabled","handleNextPage","Math","ceil","length"],"sourceRoot":""}