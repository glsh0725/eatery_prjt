{"version":3,"file":"static/js/254.c1d9a80b.chunk.js","mappings":"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","sources":["pages/Ranking.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DiningLayout from '../layouts/DiningLayout';\r\nimport '../css/Ranking.css';\r\n\r\nconst Ranking = () => {\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [isProfileModalOpen, setProfileModalOpen] = useState(false);\r\n\r\n    const reviewRanking = [\r\n        { id: 1, name: \"맛집왕\", profileImage: \"\" },\r\n        { id: 2, name: \"밥순이\", profileImage: \"\" },\r\n        { id: 3, name: \"칠가이\", profileImage: \"\" },\r\n        { id: 4, name: \"스시러버\", profileImage: \"\" },\r\n        { id: 5, name: \"맛집탐방가\", profileImage: \"\" },\r\n        { id: 6, name: \"한식매니아\", profileImage: \"\" },\r\n        { id: 7, name: \"피자킬러\", profileImage: \"\" },\r\n        { id: 8, name: \"디저트홀릭\", profileImage: \"\" },\r\n        { id: 9, name: \"양식왕\", profileImage: \"\" },\r\n        { id: 10, name: \"국밥러버\", profileImage: \"\" },\r\n        { id: 11, name: \"치킨매니아\", profileImage: \"\" },\r\n        { id: 12, name: \"베이커리러버\", profileImage: \"\" },\r\n        { id: 13, name: \"커피마니아\", profileImage: \"\" },\r\n        { id: 14, name: \"테라스뷰\", profileImage: \"\" },\r\n        { id: 15, name: \"스테이크사랑꾼\", profileImage: \"\" },\r\n    ];\r\n\r\n    const followRanking = [\r\n        { id: 1, name: \"맛탐정\", profileImage: \"\" },\r\n        { id: 2, name: \"한식러버\", profileImage: \"\" },\r\n        { id: 3, name: \"카페러버\", profileImage: \"\" },\r\n        { id: 4, name: \"푸드판다\", profileImage: \"\" },\r\n        { id: 5, name: \"고기러버\", profileImage: \"\" },\r\n        { id: 6, name: \"밥사랑\", profileImage: \"\" },\r\n        { id: 7, name: \"치즈러버\", profileImage: \"\" },\r\n        { id: 8, name: \"감성맛집러\", profileImage: \"\" },\r\n        { id: 9, name: \"파스타매니아\", profileImage: \"\" },\r\n        { id: 10, name: \"후라이드킹\", profileImage: \"\" },\r\n        { id: 11, name: \"소울푸드러버\", profileImage: \"\" },\r\n        { id: 12, name: \"베이커리매니아\", profileImage: \"\" },\r\n        { id: 13, name: \"중식러버\", profileImage: \"\" },\r\n        { id: 14, name: \"분식왕\", profileImage: \"\" },\r\n        { id: 15, name: \"커피러버\", profileImage: \"\" },\r\n    ];\r\n\r\n    const commentRanking = [\r\n        { id: 1, name: \"카페탐험가\", profileImage: \"\" },\r\n        { id: 2, name: \"수제버거러버\", profileImage: \"\" },\r\n        { id: 3, name: \"스시사랑꾼\", profileImage: \"\" },\r\n        { id: 4, name: \"떡볶이광\", profileImage: \"\" },\r\n        { id: 5, name: \"치킨홀릭\", profileImage: \"\" },\r\n        { id: 6, name: \"국밥킹\", profileImage: \"\" },\r\n        { id: 7, name: \"감성디저트러버\", profileImage: \"\" },\r\n        { id: 8, name: \"해산물왕\", profileImage: \"\" },\r\n        { id: 9, name: \"고기러버\", profileImage: \"\" },\r\n        { id: 10, name: \"피자매니아\", profileImage: \"\" },\r\n        { id: 11, name: \"양식사랑\", profileImage: \"\" },\r\n        { id: 12, name: \"스테이크광\", profileImage: \"\" },\r\n        { id: 13, name: \"튀김러버\", profileImage: \"\" },\r\n        { id: 14, name: \"일식마니아\", profileImage: \"\" },\r\n        { id: 15, name: \"테라스러버\", profileImage: \"\" },\r\n    ];\r\n\r\n    // 보여줄 데이터 개수를 관리하는 상태\r\n    const [visibleReviewCount, setVisibleReviewCount] = useState(10);\r\n    const [visibleFollowCount, setVisibleFollowCount] = useState(10);\r\n    const [visibleCommentCount, setVisibleCommentCount] = useState(10);\r\n\r\n    // \"더보기\" 클릭 핸들러\r\n    const loadMore = (setVisibleCount, currentCount) => {\r\n        setVisibleCount(currentCount + 10);\r\n    };\r\n\r\n    const handleProfileClick = (user) => {\r\n        setSelectedUser(user);\r\n        setProfileModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setSelectedUser(null);\r\n        setProfileModalOpen(false);\r\n    };\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"ranking-container\">\r\n                <div className=\"ranking-section\">\r\n                    {/* 리뷰 랭킹 */}\r\n                    <div className=\"ranking-box\">\r\n                        <h2>리뷰 랭킹 TOP 100</h2>\r\n                        <div className=\"ranking-list\">\r\n                            {reviewRanking.slice(0, visibleReviewCount).map((user) => (\r\n                                <div className=\"ranking-item\" key={user.id}>\r\n                                    <span className=\"ranking-rank\">{user.id}</span>\r\n                                    <img\r\n                                        className=\"profile-image\"\r\n                                        src={user.profileImage || \"/images/chillguy.jpg\"}\r\n                                        alt=\"프로필\"\r\n                                        onClick={() => handleProfileClick(user)}\r\n                                        style={{cursor: 'pointer'}}\r\n                                    />\r\n                                    <span className=\"ranking-user\">{user.name}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {visibleReviewCount < reviewRanking.length && (\r\n                            <button\r\n                                className=\"load-more-btn\"\r\n                                onClick={() => loadMore(setVisibleReviewCount, visibleReviewCount)}\r\n                            >\r\n                                더보기\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* 팔로우 랭킹 */}\r\n                    <div className=\"ranking-box\">\r\n                        <h2>팔로우 랭킹 TOP 100</h2>\r\n                        <div className=\"ranking-list\">\r\n                            {followRanking.slice(0, visibleFollowCount).map((user) => (\r\n                                <div className=\"ranking-item\" key={user.id}>\r\n                                    <span className=\"ranking-rank\">{user.id}</span>\r\n                                    <img\r\n                                        className=\"profile-image\"\r\n                                        src={user.profileImage || \"/images/chillguy.jpg\"}\r\n                                        alt=\"프로필\"\r\n                                        onClick={() => handleProfileClick(user)}\r\n                                        style={{cursor: 'pointer'}}\r\n                                    />\r\n                                    <span className=\"ranking-user\">{user.name}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {visibleFollowCount < followRanking.length && (\r\n                            <button\r\n                                className=\"load-more-btn\"\r\n                                onClick={() => loadMore(setVisibleFollowCount, visibleFollowCount)}\r\n                            >\r\n                                더보기\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* 댓글 랭킹 */}\r\n                    <div className=\"ranking-box\">\r\n                        <h2>댓글 랭킹 TOP 100</h2>\r\n                        <div className=\"ranking-list\">\r\n                            {commentRanking.slice(0, visibleCommentCount).map((user) => (\r\n                                <div className=\"ranking-item\" key={user.id}>\r\n                                    <span className=\"ranking-rank\">{user.id}</span>\r\n                                    <img\r\n                                        className=\"profile-image\"\r\n                                        src={user.profileImage || \"/images/chillguy.jpg\"}\r\n                                        alt=\"프로필\"\r\n                                        onClick={() => handleProfileClick(user)}\r\n                                        style={{cursor: 'pointer'}}\r\n                                    />\r\n                                    <span className=\"ranking-user\">{user.name}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {visibleCommentCount < commentRanking.length && (\r\n                            <button\r\n                                className=\"load-more-btn\"\r\n                                onClick={() => loadMore(setVisibleCommentCount, visibleCommentCount)}\r\n                            >\r\n                                더보기\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* 프로필 모달 */}\r\n                {isProfileModalOpen && selectedUser && (\r\n                    <div className=\"modal-overlay\" onClick={closeModal}>\r\n                        <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                            <button className=\"close-btn\" onClick={closeModal}>\r\n                                닫기\r\n                            </button>\r\n                            <div className=\"profile-modal-content\">\r\n                                <img\r\n                                    src={selectedUser.profileImage || \"/images/chillguy.jpg\"}\r\n                                    alt=\"프로필\"\r\n                                    className=\"modal-profile-image\"\r\n                                />\r\n                                <h2>{selectedUser.name}</h2>\r\n                                <p>팔로워: 25명</p>\r\n                                <p>팔로잉: 23명</p>\r\n                                <p>좋아요: 43개</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Ranking;\r\n"],"names":["Ranking","selectedUser","setSelectedUser","useState","isProfileModalOpen","setProfileModalOpen","reviewRanking","id","name","profileImage","followRanking","commentRanking","visibleReviewCount","setVisibleReviewCount","visibleFollowCount","setVisibleFollowCount","visibleCommentCount","setVisibleCommentCount","loadMore","setVisibleCount","currentCount","handleProfileClick","user","closeModal","_jsx","DiningLayout","children","_jsxs","className","slice","map","src","alt","onClick","style","cursor","length","e","stopPropagation"],"sourceRoot":""}