{"version":3,"file":"static/js/187.fa866c0d.chunk.js","mappings":"uKAKA,MAoEA,EApEmBA,KACf,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAGnCK,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAAMC,IAAI,0CACLC,MAAMC,IACHV,EAAeU,EAASC,KAAK,IAEhCC,OAAOR,IACJC,EAASD,EAAMS,SACfC,QAAQV,MAAM,8BAA+BA,EAAM,GACrD,GACP,IAEH,MAKMW,EAlBe,EAkBGb,EAClBc,EAAmBD,EAnBJ,EAoBfE,EAAelB,EAAYmB,MAAMF,EAAkBD,GAGnDI,EAAaC,KAAKC,KAAKtB,EAAYuB,OAvBpB,GAyBrB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACTC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBF,SAAA,EACjCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oCACHrB,IAASsB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeF,SAAA,CAAC,iBAAKrB,MAC5CmB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,kBAAiBF,SAC3BR,EAAaW,KAAI,CAACC,EAAYC,KAC3BJ,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,kBAAiBF,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OAAKQ,IAAG,WAAAC,OAAaH,EAAWI,WAAaC,IAAKL,EAAWM,QAC7DZ,EAAAA,EAAAA,KAAA,MAAAE,SAAKI,EAAWM,QAChBZ,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAWO,WACfV,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BAAOI,EAAWQ,aACrBX,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,iBAAKI,EAAWS,eACnBZ,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BAAOI,EAAWU,gBACrBb,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BAAOI,EAAWW,aACrBd,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BAAOI,EAAWY,aACrBf,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,uBAAMI,EAAWa,YACpBhB,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,iBAAKI,EAAWc,UAVbb,QAgBlBP,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAAYF,SACtBmB,MAAMC,KAAK,CAAEvB,OAAQH,IAAc,CAAC2B,EAAGC,KACpCxB,EAAAA,EAAAA,KAAA,UAEIyB,QAASA,KAtC7B7C,EAsCoD4C,EAAI,EAAG,EACvCpB,UAAWzB,IAAgB6C,EAAI,EAAI,SAAW,GAAGtB,SAEhDsB,EAAI,GAJAA,EAAI,WASd,C","sources":["pages/Find_store.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DiningLayout from '../layouts/DiningLayout';\r\nimport \"../css/Find_store.css\";\r\n\r\nconst Find_store = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [error, setError] = useState('');\r\n    const itemsPerPage = 8;\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:18080/api/restaurants')\r\n            .then((response) => {\r\n                setRestaurants(response.data);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message);\r\n                console.error(\"Error fetching restaurants:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const handlePageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n\r\n    // Calculate current page items\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = restaurants.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    // Calculate total pages\r\n    const totalPages = Math.ceil(restaurants.length / itemsPerPage);\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"find-store-container\">\r\n                <h1>식당 리스트</h1>\r\n                {error && <p className=\"error-message\">오류: {error}</p>}\r\n                <div className=\"restaurant-list\">\r\n                    {currentItems.map((restaurant, index) => (\r\n                        <div key={index} className=\"restaurant-card\">\r\n                            <img src={`/images/${restaurant.photoName}`} alt={restaurant.name} />\r\n                            <h2>{restaurant.name}</h2>\r\n                            <p>{restaurant.address}</p>\r\n                            <p>카테고리: {restaurant.category}</p>\r\n                            <p>지번: {restaurant.oldAddress}</p>\r\n                            <p>전화번호: {restaurant.phoneNumber}</p>\r\n                            <p>홈페이지: {restaurant.homepage}</p>\r\n                            <p>영업시간: {restaurant.openTime}</p>\r\n                            <p>휴무일: {restaurant.offDays}</p>\r\n                            <p>태그: {restaurant.tags}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Pagination */}\r\n                <div className=\"pagination\">\r\n                    {Array.from({ length: totalPages }, (_, i) => (\r\n                        <button\r\n                            key={i + 1}\r\n                            onClick={() => handlePageChange(i + 1)}\r\n                            className={currentPage === i + 1 ? \"active\" : \"\"}\r\n                        >\r\n                            {i + 1}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Find_store;"],"names":["Find_store","restaurants","setRestaurants","useState","currentPage","setCurrentPage","error","setError","useEffect","axios","get","then","response","data","catch","message","console","indexOfLastItem","indexOfFirstItem","currentItems","slice","totalPages","Math","ceil","length","_jsx","DiningLayout","children","_jsxs","className","map","restaurant","index","src","concat","photoName","alt","name","address","category","oldAddress","phoneNumber","homepage","openTime","offDays","tags","Array","from","_","i","onClick"],"sourceRoot":""}