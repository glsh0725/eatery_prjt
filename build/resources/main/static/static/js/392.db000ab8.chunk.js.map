{"version":3,"file":"static/js/392.db000ab8.chunk.js","mappings":"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","sources":["components/find_store/RestaurantDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport \"../../css/RestaurantDetail.css\";\r\n\r\nconst RestaurantDetail = () => {\r\n    const { name } = useParams();\r\n    const [restaurant, setRestaurant] = useState(null);\r\n    const [users, setUsers] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const [isFavorited, setIsFavorited] = useState(false);\r\n    const [userId, setUserId] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showReportModal, setShowReportModal] = useState(false);\r\n    const [showWriteReviewModal, setShowWriteReviewModal] = useState(false);\r\n    const [selectedReason, setSelectedReason] = useState(\"spam\");\r\n    const [reviews, setReviews] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const reviewsPerPage = 3;\r\n\r\n    useEffect(() => {\r\n        const fetchUserIdFromToken = () => {\r\n            const token = localStorage.getItem(\"authToken\");\r\n            if (token) {\r\n                try {\r\n                    const payload = jwtDecode(token);\r\n                    if (payload.exp * 1000 > Date.now()) {\r\n                        setUserId(payload.sub);\r\n                        console.log(\"userId:\", payload.sub);\r\n                    } else {\r\n                        localStorage.removeItem(\"authToken\");\r\n                        setUserId(null);\r\n                    }\r\n                } catch (e) {\r\n                    console.error(\"토큰 디코딩 실패:\", e);\r\n                    setUserId(null);\r\n                }\r\n            }\r\n        };\r\n        fetchUserIdFromToken();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const restaurantResponse = await axios.get(`http://localhost:18080/api/restaurants/${name}`);\r\n                setRestaurant(restaurantResponse.data);\r\n\r\n                const reviewsResponse = await axios.get(`http://localhost:18080/api/reviews/${name}`);\r\n                setReviews(reviewsResponse.data);\r\n\r\n                const usersResponse = await axios.get(`http://localhost:18080/api/users`);\r\n                setUsers(usersResponse.data);\r\n\r\n                if (userId) {\r\n                    const response = await axios.get(`http://localhost:18080/api/likes-and-favorites/${userId}`);\r\n                    const { likes = [], favorites = [] } = response.data;\r\n                    setIsLiked(likes.includes(name));\r\n                    setIsFavorited(favorites.includes(name));\r\n                }\r\n            } catch (err) {\r\n                setError(err.message);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [name, userId]);\r\n\r\n    const toggleFavorite = async () => {\r\n        try {\r\n            const response = await axios.post(\r\n                `http://localhost:18080/api/favorites/toggle`,\r\n                { memId: userId, resName: name }\r\n            );\r\n            setIsFavorited(response.data);\r\n        } catch (err) {\r\n            console.error(\"즐겨찾기 토글 중 오류:\", err);\r\n        }\r\n    };\r\n\r\n    const toggleLike = async () => {\r\n        try {\r\n            const response = await axios.post(\r\n                `http://localhost:18080/api/likes/toggle`,\r\n                { memId: userId, resName: name }\r\n            );\r\n            setIsLiked(response.data);\r\n        } catch (err) {\r\n            console.error(\"좋아요 토글 중 오류:\", err);\r\n        }\r\n    };\r\n\r\n    const handleMoreReviewsClick = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    const openReportModal = () => {\r\n        setShowReportModal(true);\r\n    };\r\n\r\n    const closeReportModal = () => {\r\n        setShowReportModal(false);\r\n    };\r\n\r\n    const handleReasonChange = (event) => {\r\n        setSelectedReason(event.target.value);\r\n    };\r\n\r\n    const openWriteReviewModal = () => {\r\n        setShowWriteReviewModal(true);\r\n    };\r\n\r\n    const closeWriteReviewModal = () => {\r\n        setShowWriteReviewModal(false);\r\n    };\r\n\r\n    const startIndex = (currentPage - 1) * reviewsPerPage;\r\n    const currentReviews = reviews.slice(startIndex, startIndex + reviewsPerPage);\r\n\r\n    const handleNextPage = () => {\r\n        if (currentPage < Math.ceil(reviews.length / reviewsPerPage)) {\r\n            setCurrentPage((prevPage) => prevPage + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrevPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage((prevPage) => prevPage - 1);\r\n        }\r\n    };\r\n\r\n    if (error) {\r\n        return <div>오류: {error}</div>;\r\n    }\r\n\r\n    if (!restaurant) {\r\n        return <div>로딩 중...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"restaurant-detail\">\r\n            <div className=\"top-section\">\r\n                <div className=\"image-box\">\r\n                    <img\r\n                        src={\r\n                            restaurant.menuName === \"default.jpg\"\r\n                                ? \"/images/default.jpg\"\r\n                                : `/images/menu/${restaurant.menuName}`\r\n                        }\r\n                        alt={restaurant.name}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"map-box\"\r\n                    style={{height: \"320px\", overflow: \"hidden\", position: \"relative\"}}\r\n                >\r\n                    <iframe\r\n                        src={`https://map.naver.com/v5/search/${encodeURIComponent(restaurant.address)}`}\r\n                        width=\"230%\"\r\n                        height=\"100%\"\r\n                        style={{\r\n                            border: \"none\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: \"-130%\",\r\n                        }}\r\n                        allowFullScreen\r\n                        title=\"Naver Map\"\r\n                    ></iframe>\r\n                </div>\r\n            </div>\r\n            <div className=\"title-and-actions\">\r\n                <h2>\r\n                    {restaurant.name}{\" \"}\r\n                    <span className=\"rating\">\r\n                        {reviews.length > 0 && reviews.reduce((sum, review) => sum + review.reviewScore, 0) > 0\r\n                            ? (reviews.reduce((sum, review) => sum + review.reviewScore, 0) / reviews.length).toFixed(1)\r\n                            : restaurant.scoreNumber}\r\n                        </span>\r\n                </h2>\r\n                <div className=\"actions\">\r\n                    <span\r\n                        className={`favorite ${isFavorited ? \"active\" : \"\"}`}\r\n                        onClick={toggleFavorite}\r\n                    >\r\n                        ☆ 즐겨찾기\r\n                    </span>\r\n                    <span\r\n                        className={`like ${isLiked ? \"active\" : \"\"}`}\r\n                        onClick={toggleLike}\r\n                    >\r\n                        ♡ 좋아요 {restaurant.likeCount || 0}\r\n                    </span>\r\n                    <span>👀 조회수 {restaurant.viewCount || 0}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-section\">\r\n                <div className=\"details\">\r\n                    <p>영업시간: {restaurant.openTime || \"정보 없음\"}</p>\r\n                    <p>휴게시간: {restaurant.breakTime || \"정보 없음\"}</p>\r\n                    <p>휴무일: {restaurant.offDays || \"정보 없음\"}</p>\r\n                    <p>\r\n                        주소: {restaurant.address || \"정보 없음\"} (지번: {restaurant.oldAddress || \"정보 없음\"})\r\n                    </p>\r\n                    <p>전화번호: {restaurant.phoneNumber || \"정보 없음\"}</p>\r\n                    {restaurant.homepage && restaurant.homepage !== \"홈페이지 정보 없음\" ? (\r\n                        <p>\r\n                            홈페이지:{\" \"}\r\n                            <a\r\n                                href={\r\n                                    restaurant.homepage.startsWith(\"http\")\r\n                                        ? restaurant.homepage\r\n                                        : `https://${restaurant.homepage}`\r\n                                }\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                {restaurant.homepage}\r\n                            </a>\r\n                        </p>\r\n                    ) : (\r\n                        <p>홈페이지: 정보 없음</p>\r\n                    )}\r\n                    <p>주차: {restaurant.parkingInfo || \"정보 없음\"}</p>\r\n                    <p>관련 태그: {restaurant.tags || \"정보 없음\"}</p>\r\n                </div>\r\n                <div className=\"reviews-section\">\r\n                    <div className=\"reviews-header\">\r\n                        <h3>리뷰 ({reviews.length})</h3>\r\n                        <button className=\"review-button\" onClick={openWriteReviewModal}>리뷰 작성 ∨</button>\r\n                    </div>\r\n                    <div className=\"review-list\">\r\n                        {reviews\r\n                            .sort((a, b) => b.reviewNumber - a.reviewNumber)\r\n                            .slice(0, 2)\r\n                            .map((review, index) => {\r\n                                const user = users.find((user) => user.mem_id === review.memberId);\r\n\r\n                                return (\r\n                                    <div key={index} className=\"review-item\">\r\n                                        <p>\r\n                                            {user ? user.mem_nickname : \"알 수 없음\"}{\" \"}\r\n                                            <span className=\"rating\">{review.reviewScore.toFixed(1)}</span>\r\n                                        </p>\r\n                                        <div className=\"review-content\">{review.reviewContent}</div>\r\n                                        {review.reviewPhotoName && (\r\n                                            <div className=\"review-image\">\r\n                                                <img\r\n                                                    src={`/images/reviews/${review.reviewPhotoName}`}\r\n                                                    alt=\"리뷰 이미지\"\r\n                                                />\r\n                                            </div>\r\n                                        )}\r\n                                        <div className=\"review-actions\">\r\n                                            ❤️ 좋아요 {review.reviewLikes || 0}\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                    </div>\r\n                    <button className=\"more-reviews\" onClick={handleMoreReviewsClick}>\r\n                        리뷰 더보기 +\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {\r\n                showModal && (\r\n                    <div className=\"modal-overlay\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h2>리뷰 목록 ({reviews.length})</h2>\r\n                                <button className=\"write-review-btn\" onClick={openWriteReviewModal}>리뷰 작성 ∨</button>\r\n                                <button className=\"close-modal\" onClick={closeModal}>\r\n                                    X\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {reviews.length > 0 ? (\r\n                                    <div className=\"review-container\">\r\n                                        <div className=\"review-list\">\r\n                                            {currentReviews.map((review, index) => {\r\n                                                const user = users.find((user) => user.mem_id === review.memberId);\r\n\r\n                                                return (\r\n                                                    <div key={index} className=\"review-item\">\r\n                                                        <div className=\"review-header\">\r\n                                                            <div className=\"review-info\">\r\n                                                                <strong>{user ? user.mem_nickname : \"알 수 없음\"}</strong>{\" \"}\r\n                                                                <span className=\"rating\">{parseFloat(review.reviewScore).toFixed(1)}</span>\r\n                                                                <span className=\"report\" onClick={openReportModal}>🚨 신고</span>\r\n                                                            </div>\r\n                                                            <div className=\"review-actions\">\r\n                                                                <button className=\"edit-btn\">수정</button>\r\n                                                                <button className=\"delete-btn\">삭제</button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className=\"review-content\">{review.reviewContent}</div>\r\n                                                        <div className=\"review-container\">\r\n                                                            {review.reviewPhotoName && (\r\n                                                                <div className=\"review-image\">\r\n                                                                    <a\r\n                                                                        href={`/images/reviews/${review.reviewPhotoName}`}\r\n                                                                        target=\"_blank\"\r\n                                                                        rel=\"noopener noreferrer\"\r\n                                                                    >\r\n                                                                        <img\r\n                                                                            src={`/images/reviews/${review.reviewPhotoName}`}\r\n                                                                            alt=\"리뷰 이미지\"\r\n                                                                        />\r\n                                                                    </a>\r\n                                                                </div>\r\n                                                            )}\r\n                                                            <div className=\"review-footer\">\r\n                                                                <span>❤️ 좋아요 {review.reviewLikes || 0}</span>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                        <div className=\"pagination-controls\">\r\n                                            <button onClick={handlePrevPage} disabled={currentPage === 1}>\r\n                                                ∧\r\n                                            </button>\r\n                                            <button\r\n                                                onClick={handleNextPage}\r\n                                                disabled={currentPage === Math.ceil(reviews.length / reviewsPerPage)}\r\n                                            >\r\n                                                ∨\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <p>리뷰가 없습니다.</p>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            {showReportModal && (\r\n                <div className=\"report-modal-overlay\">\r\n                    <div className=\"report-modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                        <div className=\"report-modal-header\">\r\n                            <h2>신고하기</h2>\r\n                            <button className=\"close-report-modal\" onClick={closeReportModal}>\r\n                                X\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"report-modal-body\">\r\n                            <p>\r\n                                <strong>작성자</strong> | 닉네임1\r\n                            </p>\r\n                            <p>\r\n                                <strong>제목</strong> | 제목\r\n                            </p>\r\n                            <div className=\"report-options\">\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"reportReason\"\r\n                                        value=\"spam\"\r\n                                        checked={selectedReason === \"spam\"}\r\n                                        onChange={handleReasonChange}\r\n                                    />\r\n                                    스팸홍보/도배입니다.\r\n                                </label>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"reportReason\"\r\n                                        value=\"obscene\"\r\n                                        checked={selectedReason === \"obscene\"}\r\n                                        onChange={handleReasonChange}\r\n                                    />\r\n                                    음란물입니다.\r\n                                </label>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"reportReason\"\r\n                                        value=\"illegal\"\r\n                                        checked={selectedReason === \"illegal\"}\r\n                                        onChange={handleReasonChange}\r\n                                    />\r\n                                    불법정보를 포함하고 있습니다.\r\n                                </label>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"reportReason\"\r\n                                        value=\"harmful\"\r\n                                        checked={selectedReason === \"harmful\"}\r\n                                        onChange={handleReasonChange}\r\n                                    />\r\n                                    청소년에게 유해한 내용입니다.\r\n                                </label>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"reportReason\"\r\n                                        value=\"offensive\"\r\n                                        checked={selectedReason === \"offensive\"}\r\n                                        onChange={handleReasonChange}\r\n                                    />\r\n                                    욕설/생명경시/혐오/차별적 표현입니다.\r\n                                </label>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"reportReason\"\r\n                                        value=\"privacy\"\r\n                                        checked={selectedReason === \"privacy\"}\r\n                                        onChange={handleReasonChange}\r\n                                    />\r\n                                    개인정보가 노출되었습니다.\r\n                                </label>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        name=\"reportReason\"\r\n                                        value=\"custom\"\r\n                                        checked={selectedReason === \"custom\"}\r\n                                        onChange={handleReasonChange}\r\n                                    />\r\n                                    직접 입력하기.\r\n                                </label>\r\n                            </div>\r\n                            <textarea\r\n                                className=\"report-custom-input\"\r\n                                placeholder=\"사유를 입력해주세요\"\r\n                                disabled={selectedReason !== \"custom\"}\r\n                            ></textarea>\r\n                        </div>\r\n                        <div className=\"report-modal-footer\">\r\n                            <button className=\"submit-btn\">\r\n                                신고하기\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {showWriteReviewModal && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"review-write-modal-content\">\r\n                        <div className=\"review-write-modal-header\">\r\n                            <h2>리뷰 작성</h2>\r\n                            <button className=\"close-review-write-modal\" onClick={closeWriteReviewModal}>\r\n                                X\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"review-write-modal-body\">\r\n                            <div className=\"review-write-actions\">\r\n                                <button className=\"review-write-rating-btn\">별점 등록 ▼</button>\r\n                                <button className=\"review-write-image-upload-btn\">이미지 첨부</button>\r\n                            </div>\r\n                            <textarea\r\n                                placeholder=\"내용을 입력해주세요\"\r\n                                className=\"review-write-content-input\"\r\n                            ></textarea>\r\n                            <div className=\"review-write-modal-footer\">\r\n                                <button className=\"cancel-btn\" onClick={closeWriteReviewModal}>\r\n                                    취소\r\n                                </button>\r\n                                <button className=\"submit-btn\">등록</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantDetail;"],"names":["RestaurantDetail","name","useParams","restaurant","setRestaurant","useState","users","setUsers","error","setError","isLiked","setIsLiked","isFavorited","setIsFavorited","userId","setUserId","showModal","setShowModal","showReportModal","setShowReportModal","showWriteReviewModal","setShowWriteReviewModal","selectedReason","setSelectedReason","reviews","setReviews","currentPage","setCurrentPage","useEffect","fetchUserIdFromToken","token","localStorage","getItem","payload","jwtDecode","exp","Date","now","sub","console","log","removeItem","e","async","restaurantResponse","axios","get","concat","data","reviewsResponse","usersResponse","response","likes","favorites","includes","err","message","fetchData","openReportModal","handleReasonChange","event","target","value","openWriteReviewModal","closeWriteReviewModal","startIndex","currentReviews","slice","_jsxs","children","className","_jsx","src","menuName","alt","style","height","overflow","position","encodeURIComponent","address","width","border","top","left","allowFullScreen","title","length","reduce","sum","review","reviewScore","toFixed","scoreNumber","onClick","post","memId","resName","likeCount","viewCount","openTime","breakTime","offDays","oldAddress","phoneNumber","homepage","href","startsWith","rel","parkingInfo","tags","sort","a","b","reviewNumber","map","index","user","find","mem_id","memberId","mem_nickname","reviewContent","reviewPhotoName","reviewLikes","handleMoreReviewsClick","closeModal","parseFloat","handlePrevPage","prevPage","disabled","handleNextPage","Math","ceil","stopPropagation","closeReportModal","type","checked","onChange","placeholder"],"sourceRoot":""}