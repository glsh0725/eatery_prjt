{"version":3,"file":"static/js/254.00e808ca.chunk.js","mappings":"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","sources":["pages/Ranking.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DiningLayout from '../layouts/DiningLayout';\r\nimport '../css/Ranking.css';\r\n\r\nconst Ranking = () => {\r\n    // 샘플 데이터 (100명의 사용자)\r\n    const reviewRanking = Array.from({ length: 100 }, (_, i) => ({\r\n        id: i + 1,\r\n        name: `유저${i + 1}`,\r\n        profileImage: \"https://via.placeholder.com/40\", // 프로필 이미지 URL\r\n    }));\r\n\r\n    const followRanking = Array.from({ length: 100 }, (_, i) => ({\r\n        id: i + 1,\r\n        name: `유저${i + 1}`,\r\n        profileImage: \"https://via.placeholder.com/40\",\r\n    }));\r\n\r\n    const commentRanking = Array.from({ length: 100 }, (_, i) => ({\r\n        id: i + 1,\r\n        name: `유저${i + 1}`,\r\n        profileImage: \"https://via.placeholder.com/40\",\r\n    }));\r\n\r\n    // 보여줄 데이터 개수를 관리하는 상태\r\n    const [visibleReviewCount, setVisibleReviewCount] = useState(10);\r\n    const [visibleFollowCount, setVisibleFollowCount] = useState(10);\r\n    const [visibleCommentCount, setVisibleCommentCount] = useState(10);\r\n\r\n    // \"더보기\" 클릭 핸들러\r\n    const loadMore = (setVisibleCount, currentCount) => {\r\n        setVisibleCount(currentCount + 10);\r\n    };\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"ranking-container\">\r\n                <div className=\"ranking-section\">\r\n                    {/* 리뷰 랭킹 */}\r\n                    <div className=\"ranking-box\">\r\n                        <h2>리뷰 랭킹 TOP 100</h2>\r\n                        <div className=\"ranking-list\">\r\n                            {reviewRanking.slice(0, visibleReviewCount).map((user) => (\r\n                                <div className=\"ranking-item\" key={user.id}>\r\n                                    <span className=\"ranking-rank\">{user.id}</span>\r\n                                    <img className=\"profile-image\" src={user.profileImage} alt=\"프로필\" />\r\n                                    <span className=\"ranking-user\">{user.name}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {visibleReviewCount < reviewRanking.length && (\r\n                            <button\r\n                                className=\"load-more-btn\"\r\n                                onClick={() => loadMore(setVisibleReviewCount, visibleReviewCount)}\r\n                            >\r\n                                더보기\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* 팔로우 랭킹 */}\r\n                    <div className=\"ranking-box\">\r\n                        <h2>팔로우 랭킹 TOP 100</h2>\r\n                        <div className=\"ranking-list\">\r\n                            {followRanking.slice(0, visibleFollowCount).map((user) => (\r\n                                <div className=\"ranking-item\" key={user.id}>\r\n                                    <span className=\"ranking-rank\">{user.id}</span>\r\n                                    <img className=\"profile-image\" src={user.profileImage} alt=\"프로필\" />\r\n                                    <span className=\"ranking-user\">{user.name}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {visibleFollowCount < followRanking.length && (\r\n                            <button\r\n                                className=\"load-more-btn\"\r\n                                onClick={() => loadMore(setVisibleFollowCount, visibleFollowCount)}\r\n                            >\r\n                                더보기\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n\r\n                    {/* 댓글 랭킹 */}\r\n                    <div className=\"ranking-box\">\r\n                        <h2>댓글 랭킹 TOP 100</h2>\r\n                        <div className=\"ranking-list\">\r\n                            {commentRanking.slice(0, visibleCommentCount).map((user) => (\r\n                                <div className=\"ranking-item\" key={user.id}>\r\n                                    <span className=\"ranking-rank\">{user.id}</span>\r\n                                    <img className=\"profile-image\" src={user.profileImage} alt=\"프로필\" />\r\n                                    <span className=\"ranking-user\">{user.name}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {visibleCommentCount < commentRanking.length && (\r\n                            <button\r\n                                className=\"load-more-btn\"\r\n                                onClick={() => loadMore(setVisibleCommentCount, visibleCommentCount)}\r\n                            >\r\n                                더보기\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Ranking;\r\n"],"names":["Ranking","reviewRanking","Array","from","length","_","i","id","name","concat","profileImage","followRanking","commentRanking","visibleReviewCount","setVisibleReviewCount","useState","visibleFollowCount","setVisibleFollowCount","visibleCommentCount","setVisibleCommentCount","loadMore","setVisibleCount","currentCount","_jsx","DiningLayout","children","className","_jsxs","slice","map","user","src","alt","onClick"],"sourceRoot":""}