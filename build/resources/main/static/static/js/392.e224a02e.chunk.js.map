{"version":3,"file":"static/js/392.e224a02e.chunk.js","mappings":"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","sources":["components/find_store/RestaurantDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../../css/RestaurantDetail.css\";\r\n\r\nconst RestaurantDetail = () => {\r\n    const { name } = useParams();\r\n    const [restaurant, setRestaurant] = useState(null);\r\n    const [error, setError] = useState(\"\");\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(`http://localhost:18080/api/restaurants/${name}`)\r\n            .then((response) => setRestaurant(response.data))\r\n            .catch((err) => setError(err.message));\r\n    }, [name]);\r\n\r\n    const handleMoreReviewsClick = () => {\r\n        const restaurantName = name;\r\n\r\n        axios\r\n            .get(`http://localhost:18080/api/reviews/${restaurantName}`)\r\n            .then((response) => {\r\n                console.log(\"리뷰 데이터:\", response.data);\r\n                setReviews(response.data);\r\n                setShowModal(true);\r\n            })\r\n            .catch((err) => {\r\n                console.error(\"API 요청 실패:\", err);\r\n                setError(err.message);\r\n            });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    if (error) {\r\n        return <div>오류: {error}</div>;\r\n    }\r\n\r\n    if (!restaurant) {\r\n        return <div>로딩 중...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"restaurant-detail\">\r\n            <div className=\"top-section\">\r\n                <div className=\"image-box\">\r\n                    <img\r\n                        src={\r\n                            restaurant.menuName === \"default.jpg\"\r\n                                ? \"/images/default.jpg\"\r\n                                : `/images/menu/${restaurant.menuName}`\r\n                        }\r\n                        alt={restaurant.name}\r\n                    />\r\n                </div>\r\n                <div\r\n                    className=\"map-box\"\r\n                    style={{height: \"320px\", overflow: \"hidden\", position: \"relative\"}}\r\n                >\r\n                    <iframe\r\n                        src={`https://map.naver.com/v5/search/${encodeURIComponent(restaurant.address)}`}\r\n                        width=\"230%\"\r\n                        height=\"100%\"\r\n                        style={{\r\n                            border: \"none\",\r\n                            position: \"absolute\",\r\n                            top: 0,\r\n                            left: \"-130%\",\r\n                        }}\r\n                        allowFullScreen\r\n                        title=\"Naver Map\"\r\n                    ></iframe>\r\n                </div>\r\n            </div>\r\n            <div className=\"title-and-actions\">\r\n                <h2>\r\n                    {restaurant.name} <span className=\"rating\">{restaurant.scoreNumber}</span>\r\n                </h2>\r\n                <div className=\"actions\">\r\n                    <span>⭐ 즐겨찾기</span>\r\n                    <span>❤️ 좋아요 {restaurant.likeCount || 0}</span>\r\n                    <span>👀 조회수 {restaurant.viewCount || 0}</span>\r\n                </div>\r\n            </div>\r\n            <div className=\"main-section\">\r\n                <div className=\"details\">\r\n                    <p>영업시간: {restaurant.openTime || \"정보 없음\"}</p>\r\n                    <p>휴게시간: {restaurant.breakTime || \"정보 없음\"}</p>\r\n                    <p>휴무일: {restaurant.offDays || \"정보 없음\"}</p>\r\n                    <p>\r\n                        주소: {restaurant.address || \"정보 없음\"} (지번: {restaurant.oldAddress || \"정보 없음\"})\r\n                    </p>\r\n                    <p>전화번호: {restaurant.phoneNumber || \"정보 없음\"}</p>\r\n                    {restaurant.homepage && restaurant.homepage !== \"홈페이지 정보 없음\" ? (\r\n                        <p>\r\n                            홈페이지:{\" \"}\r\n                            <a\r\n                                href={\r\n                                    restaurant.homepage.startsWith(\"http\")\r\n                                        ? restaurant.homepage\r\n                                        : `https://${restaurant.homepage}`\r\n                                }\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                {restaurant.homepage}\r\n                            </a>\r\n                        </p>\r\n                    ) : (\r\n                        <p>홈페이지: 정보 없음</p>\r\n                    )}\r\n                    <p>주차: {restaurant.parkingInfo || \"정보 없음\"}</p>\r\n                    <p>관련 태그: {restaurant.tags || \"정보 없음\"}</p>\r\n                </div>\r\n                <div className=\"reviews-section\">\r\n                    <div className=\"reviews-header\">\r\n                        <h3>리뷰 ({reviews.length})</h3>\r\n                        <button className=\"review-button\">리뷰 작성 ∨</button>\r\n                    </div>\r\n                    <div className=\"review-list\">\r\n                        {reviews.map((review, index) => (\r\n                            <div key={index} className=\"review-item\">\r\n                                <p>\r\n                                    {review.memberId}{\" \"}\r\n                                    <span className=\"rating\">{review.reviewScore}</span>\r\n                                </p>\r\n                                <div className=\"review-content\">{review.reviewContent}</div>\r\n                                {review.reviewPhotoName && (\r\n                                    <div className=\"review-image\">\r\n                                        <img\r\n                                            src={`/images/reviews/${review.reviewPhotoName}`}\r\n                                            alt=\"리뷰 이미지\"\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"review-actions\">\r\n                                    ❤️ 좋아요 {review.reviewLikes || 0}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                        <div className=\"review-item\">\r\n                            <p>\r\n                                닉네임 <span className=\"rating\">5.0</span>\r\n                            </p>\r\n                            <div className=\"review-content\">리뷰 내용</div>\r\n                            <div className=\"review-image\">이미지</div>\r\n                            <div className=\"review-actions\">❤️ 좋아요 20</div>\r\n                        </div>\r\n                </div>\r\n                <button className=\"more-reviews\" onClick={handleMoreReviewsClick}>\r\n                    리뷰 더보기 +\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    {\r\n        showModal && (\r\n            <div className=\"modal-overlay\" onClick={closeModal}>\r\n                <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\r\n                    <div className=\"modal-header\">\r\n                    <h2>리뷰 목록 ({reviews.length})</h2>\r\n                            <button className=\"close-modal\" onClick={closeModal}>\r\n                                X\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            {reviews.length > 0 ? (\r\n                                <div className=\"review-list\">\r\n                                    {reviews.map((review, index) => (\r\n                                        <div key={index} className=\"review-item\">\r\n                                            <div className=\"review-header\">\r\n                                                <p>\r\n                                                    <strong>{review.memberId}</strong>{\" \"}\r\n                                                    <span className=\"rating\">{review.reviewScore}</span>\r\n                                                </p>\r\n                                                <div className=\"review-actions\">\r\n                                                    <span className=\"report\">🚨 신고</span>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"review-content\">\r\n                                                <p>{review.reviewContent}</p>\r\n                                                {review.reviewPhotoName && (\r\n                                                    <div className=\"review-image\">\r\n                                                        <img\r\n                                                            src={`/images/reviews/${review.reviewPhotoName}`}\r\n                                                            alt=\"리뷰 이미지\"\r\n                                                        />\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className=\"review-footer\">\r\n                                                <span>❤️ 좋아요 {review.reviewLikes || 0}</span>\r\n                                                <span>💬 댓글 {review.commentCount || 0}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                <p>리뷰가 없습니다.</p>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RestaurantDetail;"],"names":["RestaurantDetail","name","useParams","restaurant","setRestaurant","useState","error","setError","showModal","setShowModal","reviews","setReviews","useEffect","axios","get","concat","then","response","data","catch","err","message","closeModal","_jsxs","children","className","_jsx","src","menuName","alt","style","height","overflow","position","encodeURIComponent","address","width","border","top","left","allowFullScreen","title","scoreNumber","likeCount","viewCount","openTime","breakTime","offDays","oldAddress","phoneNumber","homepage","href","startsWith","target","rel","parkingInfo","tags","length","map","review","index","memberId","reviewScore","reviewContent","reviewPhotoName","reviewLikes","onClick","handleMoreReviewsClick","restaurantName","console","log","e","stopPropagation","commentCount"],"sourceRoot":""}