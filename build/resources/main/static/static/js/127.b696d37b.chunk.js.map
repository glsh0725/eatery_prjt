{"version":3,"file":"static/js/127.b696d37b.chunk.js","mappings":"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","sources":["pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport DiningLayout from \"../layouts/DiningLayout\";\nimport \"../css/Main.css\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Main = () => {\n    const [restaurants, setRestaurants] = useState([]);\n    const [hotIndex, setHotIndex] = useState(0);\n    const [soloIndex, setSoloIndex] = useState(0);\n    const [safeIndex, setSafeIndex] = useState(0);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        axios\n            .get(\"http://localhost:18080/api/restaurants-with-reviews\")\n            .then((response) => {\n                setRestaurants(response.data);\n            })\n            .catch((error) => {\n                console.error(\"Error fetching restaurants:\", error);\n            });\n    }, []);\n\n    const handleNext = (setIndex, index, items) => {\n        if (index + 4 < items.length) {\n            setIndex(index + 1);\n        }\n    };\n\n    const handlePrev = (setIndex, index) => {\n        if (index > 0) {\n            setIndex(index - 1);\n        }\n    };\n\n    const handleCardClick = (restaurantName) => {\n        navigate(`/find_store/${restaurantName}`);\n    };\n\n    const renderCategory = (title, filteredRestaurants, index, setIndex) => {\n        return (\n            <div className=\"main-category-section\">\n                <h2 className=\"main-category-title\">{title}</h2>\n                <div className=\"main-carousel-container\">\n                    <button\n                        className=\"main-arrow-button main-left-arrow\"\n                        onClick={() => handlePrev(setIndex, index)}\n                        disabled={index === 0}\n                    >\n                        ◀\n                    </button>\n                    <div className=\"main-card-list\">\n                        {filteredRestaurants\n                            .slice(index, index + 4)\n                            .map((restaurant) => (\n                                <div\n                                    key={restaurant.id}\n                                    className=\"main-card\"\n                                    onClick={() => handleCardClick(restaurant.name)}\n                                >\n                                    <img\n                                        src={\n                                            restaurant.photoName === \"default.jpg\"\n                                                ? \"/images/default.jpg\"\n                                                : `/images/restaurant/${restaurant.photoName}`\n                                        }\n                                        alt={restaurant.name}\n                                        className=\"main-card-image\"\n                                    />\n                                    <h3 className=\"main-card-title\">{restaurant.name}</h3>\n                                    <p className=\"main-card-menu\">\n                                        대표메뉴: {restaurant.category || \"정보 없음\"}\n                                    </p>\n                                    <h3 className=\"main-card-rating\">\n                                        ⭐\n                                        {restaurant.reviews?.length > 0 &&\n                                        restaurant.reviews.reduce((sum, review) => sum + review.reviewScore, 0) > 0\n                                            ? (\n                                                restaurant.reviews.reduce((sum, review) => sum + review.reviewScore, 0) /\n                                                restaurant.reviews.length\n                                            ).toFixed(1)\n                                            : restaurant.scoreNumber}\n                                    </h3>\n                                </div>\n                            ))}\n                    </div>\n                    <button\n                        className=\"main-arrow-button main-right-arrow\"\n                        onClick={() => handleNext(setIndex, index, filteredRestaurants)}\n                        disabled={index + 4 >= filteredRestaurants.length}\n                    >\n                        ▶\n                    </button>\n                </div>\n            </div>\n        );\n    };\n\n    const hotRestaurants = restaurants.filter((restaurant) => restaurant.tags?.includes(\"HOT\"));\n    const soloRestaurants = restaurants.filter((restaurant) => restaurant.tags?.includes(\"혼밥\"));\n    const safeRestaurants = restaurants.filter((restaurant) => restaurant.tags?.includes(\"안심식당\"));\n\n    return (\n        <DiningLayout>\n            <div className=\"main-container\">\n                {renderCategory(\"HOT 추천 맛집\", hotRestaurants, hotIndex, setHotIndex)}\n                {renderCategory(\"혼밥 추천 맛집\", soloRestaurants, soloIndex, setSoloIndex)}\n                {renderCategory(\"안심식당\", safeRestaurants, safeIndex, setSafeIndex)}\n            </div>\n        </DiningLayout>\n    );\n};\n\nexport default Main;"],"names":["Main","restaurants","setRestaurants","useState","hotIndex","setHotIndex","soloIndex","setSoloIndex","safeIndex","setSafeIndex","navigate","useNavigate","useEffect","axios","get","then","response","data","catch","error","console","renderCategory","title","filteredRestaurants","index","setIndex","_jsxs","className","children","_jsx","onClick","handlePrev","disabled","slice","map","restaurant","_restaurant$reviews","handleCardClick","restaurantName","name","concat","src","photoName","alt","category","reviews","length","reduce","sum","review","reviewScore","toFixed","scoreNumber","id","handleNext","items","hotRestaurants","filter","_restaurant$tags","tags","includes","soloRestaurants","_restaurant$tags2","safeRestaurants","_restaurant$tags3","DiningLayout"],"sourceRoot":""}