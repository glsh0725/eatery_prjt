{"version":3,"file":"static/js/325.a61ebe00.chunk.js","mappings":"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","sources":["pages/Admin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DiningLayout from \"../layouts/DiningLayout\";\r\nimport \"../css/Admin.css\";\r\n\r\nconst Admin = () => {\r\n    // 샘플 데이터 생성\r\n    const members = Array.from({ length: 100 }, (_, i) => ({\r\n        id: i + 1,\r\n        userId: `user${i}`,\r\n        nickname: `닉네임${i}`,\r\n        email: `user${i}@gmail.com`,\r\n        emailSubscribed: i % 2 === 0 ? \"Y\" : \"N\",\r\n        joinDate: `2024-12-${String(16 + (i % 14)).padStart(2, \"0\")}`,\r\n        consentDate: `2024-12-${String(16 + (i % 14)).padStart(2, \"0\")}`,\r\n    }));\r\n\r\n    const reports = Array.from({ length: 100 }, (_, i) => ({\r\n        id: i + 1,\r\n        nickname: `닉네임${i + 1}`,\r\n        reviewCount: Math.floor(Math.random() * 10),\r\n        commentCount: Math.floor(Math.random() * 10),\r\n        crewCount: Math.floor(Math.random() * 10),\r\n        date: `2024-12-${String(17 + (i % 14)).padStart(2, \"0\")}`,\r\n    }));\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [activeTab, setActiveTab] = useState(\"members\");\r\n    const itemsPerPage = 10;\r\n\r\n    const currentData = activeTab === \"members\"\r\n        ? members.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\r\n        : reports.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n\r\n    const totalPages = Math.ceil(\r\n        (activeTab === \"members\" ? members.length : reports.length) / itemsPerPage\r\n    );\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"admin-container\">\r\n                <div className=\"tab-menu\">\r\n                    <button\r\n                        className={activeTab === \"members\" ? \"active\" : \"\"}\r\n                        onClick={() => {\r\n                            setActiveTab(\"members\");\r\n                            setCurrentPage(1);\r\n                        }}\r\n                    >\r\n                        회원 목록\r\n                    </button>\r\n                    <button\r\n                        className={activeTab === \"reports\" ? \"active\" : \"\"}\r\n                        onClick={() => {\r\n                            setActiveTab(\"reports\");\r\n                            setCurrentPage(1);\r\n                        }}\r\n                    >\r\n                        신고 목록\r\n                    </button>\r\n                </div>\r\n\r\n                {activeTab === \"members\" && (\r\n                    <div className=\"admin-table-container\">\r\n                        <div className=\"table-controls\">\r\n                            <input type=\"text\" placeholder=\"아이디\" className=\"search-input\" />\r\n                            <button className=\"control-button\">검색</button>\r\n                            <button className=\"control-button\">추가</button>\r\n                            <button className=\"control-button\">저장</button>\r\n                            <button className=\"control-button\">삭제</button>\r\n                        </div>\r\n                        <table className=\"admin-table\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>선택</th>\r\n                                <th>번호</th>\r\n                                <th>아이디</th>\r\n                                <th>닉네임</th>\r\n                                <th>이메일</th>\r\n                                <th>이메일 수신</th>\r\n                                <th>가입날짜</th>\r\n                                <th>동의날짜</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {currentData.map((member) => (\r\n                                <tr key={member.id}>\r\n                                    <td>\r\n                                        <input type=\"checkbox\" />\r\n                                    </td>\r\n                                    <td>{member.id}</td>\r\n                                    <td>{member.userId}</td>\r\n                                    <td>{member.nickname}</td>\r\n                                    <td>{member.email}</td>\r\n                                    <td>{member.emailSubscribed}</td>\r\n                                    <td>{member.joinDate}</td>\r\n                                    <td>{member.consentDate}</td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n                {activeTab === \"reports\" && (\r\n                    <div className=\"admin-table-container\">\r\n                        <div className=\"table-controls\">\r\n                            <input type=\"text\" placeholder=\"닉네임\" className=\"search-input\" />\r\n                            <button className=\"control-button\">검색</button>\r\n                            <button className=\"control-button\">삭제</button>\r\n                        </div>\r\n                        <table className=\"admin-table\">\r\n                            <thead>\r\n                            <tr>\r\n                                <th>선택</th>\r\n                                <th>번호</th>\r\n                                <th>닉네임</th>\r\n                                <th>리뷰 관리</th>\r\n                                <th>댓글 관리</th>\r\n                                <th>크루 관리</th>\r\n                                <th>리뷰 신고</th>\r\n                                <th>댓글 신고</th>\r\n                                <th>크루 신고</th>\r\n                                <th>작성날짜</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {currentData.map((report) => (\r\n                                <tr key={report.id}>\r\n                                    <td>\r\n                                        <input type=\"checkbox\" />\r\n                                    </td>\r\n                                    <td>{report.id}</td>\r\n                                    <td>{report.nickname}</td>\r\n                                    <td>\r\n                                        <button className=\"manage-button\">리뷰 내역</button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"manage-button\">댓글 내역</button>\r\n                                    </td>\r\n                                    <td>\r\n                                        <button className=\"manage-button\">크루 내역</button>\r\n                                    </td>\r\n                                    <td>{report.reviewCount}건</td>\r\n                                    <td>{report.commentCount}건</td>\r\n                                    <td>{report.crewCount}건</td>\r\n                                    <td>{report.date}</td>\r\n                                </tr>\r\n                            ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"pagination\">\r\n                    <button\r\n                        onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                        disabled={currentPage === 1}\r\n                    >\r\n                        &lt;\r\n                    </button>\r\n                    {Array.from({ length: totalPages }, (_, i) => (\r\n                        <button\r\n                            key={i + 1}\r\n                            onClick={() => setCurrentPage(i + 1)}\r\n                            className={currentPage === i + 1 ? \"active\" : \"\"}\r\n                        >\r\n                            {i + 1}\r\n                        </button>\r\n                    ))}\r\n                    <button\r\n                        onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n                        disabled={currentPage === totalPages}\r\n                    >\r\n                        &gt;\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n"],"names":["Admin","members","Array","from","length","_","i","id","userId","concat","nickname","email","emailSubscribed","joinDate","String","padStart","consentDate","reports","reviewCount","Math","floor","random","commentCount","crewCount","date","currentPage","setCurrentPage","useState","activeTab","setActiveTab","currentData","slice","totalPages","ceil","_jsx","DiningLayout","children","_jsxs","className","onClick","type","placeholder","map","member","report","prev","max","disabled","min"],"sourceRoot":""}