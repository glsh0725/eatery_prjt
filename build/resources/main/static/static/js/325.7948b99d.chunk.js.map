{"version":3,"file":"static/js/325.7948b99d.chunk.js","mappings":"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","sources":["pages/Admin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DiningLayout from \"../layouts/DiningLayout\";\r\nimport \"../css/Admin.css\";\r\n\r\nconst Admin = () => {\r\n    const members = Array.from({ length: 100 }, (_, i) => ({\r\n        id: i + 1,\r\n        userId: `user${i}`,\r\n        nickname: `닉네임${i}`,\r\n        email: `user${i}@gmail.com`,\r\n        emailSubscribed: i % 2 === 0 ? \"Y\" : \"N\",\r\n        joinDate: `2024-12-${String(16 + (i % 14)).padStart(2, \"0\")}`,\r\n        consentDate: `2024-12-${String(16 + (i % 14)).padStart(2, \"0\")}`,\r\n    }));\r\n\r\n    const reports = Array.from({ length: 100 }, (_, i) => ({\r\n        id: i + 1,\r\n        nickname: `닉네임${i + 1}`,\r\n        reviewCount: Math.floor(Math.random() * 10),\r\n        commentCount: Math.floor(Math.random() * 10),\r\n        crewCount: Math.floor(Math.random() * 10),\r\n        date: `2024-12-${String(17 + (i % 14)).padStart(2, \"0\")}`,\r\n    }));\r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [activeTab, setActiveTab] = useState(\"members\");\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const itemsPerPage = 20;\r\n\r\n    const handleButtonClick = () => {\r\n        alert(\"준비중입니다\");\r\n    };\r\n\r\n    const filteredData = (activeTab === \"members\" ? members : reports).filter((item) => {\r\n        if (activeTab === \"members\") {\r\n            return item.userId.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                item.nickname.toLowerCase().includes(searchQuery.toLowerCase());\r\n        }\r\n        return item.nickname.toLowerCase().includes(searchQuery.toLowerCase());\r\n    });\r\n\r\n    const currentData = filteredData.slice(\r\n        (currentPage - 1) * itemsPerPage,\r\n        currentPage * itemsPerPage\r\n    );\r\n\r\n    const totalPages = Math.ceil(filteredData.length / itemsPerPage);\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"admin-container\">\r\n                <div className=\"tab-menu\">\r\n                    <button\r\n                        className={activeTab === \"members\" ? \"active\" : \"\"}\r\n                        onClick={() => {\r\n                            setActiveTab(\"members\");\r\n                            setSearchQuery(\"\");\r\n                            setCurrentPage(1);\r\n                        }}\r\n                    >\r\n                        회원 목록\r\n                    </button>\r\n                    <button\r\n                        className={activeTab === \"reports\" ? \"active\" : \"\"}\r\n                        onClick={() => {\r\n                            setActiveTab(\"reports\");\r\n                            setSearchQuery(\"\");\r\n                            setCurrentPage(1);\r\n                        }}\r\n                    >\r\n                        신고 목록\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"table-controls\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={activeTab === \"members\" ? \"아이디 또는 닉네임 검색\" : \"닉네임 검색\"}\r\n                        className=\"search-input\"\r\n                        value={searchQuery}\r\n                        onChange={(e) => setSearchQuery(e.target.value)}\r\n                    />\r\n                    <div className=\"control-buttons\">\r\n                        {activeTab === \"members\" && (\r\n                            <>\r\n                                <button className=\"control-button\" onClick={handleButtonClick}>추가</button>\r\n                                <button className=\"control-button\" onClick={handleButtonClick}>저장</button>\r\n                            </>\r\n                        )}\r\n                        <button className=\"control-button\" onClick={handleButtonClick}>삭제</button>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"admin-table-container\">\r\n                    <table className=\"admin-table\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th>선택</th>\r\n                            <th>번호</th>\r\n                            <th>{activeTab === \"members\" ? \"아이디\" : \"닉네임\"}</th>\r\n                            {activeTab === \"members\" ? (\r\n                                <>\r\n                                    <th>닉네임</th>\r\n                                    <th>이메일</th>\r\n                                    <th>이메일 수신</th>\r\n                                    <th>가입날짜</th>\r\n                                    <th>동의날짜</th>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <th>리뷰 관리</th>\r\n                                    <th>댓글 관리</th>\r\n                                    <th>크루 관리</th>\r\n                                    <th>리뷰 신고</th>\r\n                                    <th>댓글 신고</th>\r\n                                    <th>크루 신고</th>\r\n                                    <th>작성날짜</th>\r\n                                </>\r\n                            )}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {currentData.map((item) => (\r\n                            <tr key={item.id}>\r\n                                <td>\r\n                                    <input type=\"checkbox\" />\r\n                                </td>\r\n                                <td>{item.id}</td>\r\n                                {activeTab === \"members\" ? (\r\n                                    <>\r\n                                        <td>{item.userId}</td>\r\n                                        <td>{item.nickname}</td>\r\n                                        <td>{item.email}</td>\r\n                                        <td>{item.emailSubscribed}</td>\r\n                                        <td>{item.joinDate}</td>\r\n                                        <td>{item.consentDate}</td>\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <td>{item.nickname}</td>\r\n                                        <td>\r\n                                            <button className=\"manage-button\" onClick={handleButtonClick}>리뷰 내역</button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button className=\"manage-button\" onClick={handleButtonClick}>댓글 내역</button>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button className=\"manage-button\" onClick={handleButtonClick}>크루 내역</button>\r\n                                        </td>\r\n                                        <td>{item.reviewCount}건</td>\r\n                                        <td>{item.commentCount}건</td>\r\n                                        <td>{item.crewCount}건</td>\r\n                                        <td>{item.date}</td>\r\n                                    </>\r\n                                )}\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"pagination\">\r\n                    <button\r\n                        onClick={() => setCurrentPage((prev) => Math.max(prev - 1, 1))}\r\n                        disabled={currentPage === 1}\r\n                    >\r\n                        &lt;\r\n                    </button>\r\n                    {Array.from({ length: totalPages }, (_, i) => (\r\n                        <button\r\n                            key={i + 1}\r\n                            onClick={() => setCurrentPage(i + 1)}\r\n                            className={currentPage === i + 1 ? \"active\" : \"\"}\r\n                        >\r\n                            {i + 1}\r\n                        </button>\r\n                    ))}\r\n                    <button\r\n                        onClick={() => setCurrentPage((prev) => Math.min(prev + 1, totalPages))}\r\n                        disabled={currentPage === totalPages}\r\n                    >\r\n                        &gt;\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Admin;"],"names":["Admin","members","Array","from","length","_","i","id","userId","concat","nickname","email","emailSubscribed","joinDate","String","padStart","consentDate","reports","reviewCount","Math","floor","random","commentCount","crewCount","date","currentPage","setCurrentPage","useState","activeTab","setActiveTab","searchQuery","setSearchQuery","handleButtonClick","alert","filteredData","filter","item","toLowerCase","includes","currentData","slice","totalPages","ceil","_jsx","DiningLayout","children","_jsxs","className","onClick","type","placeholder","value","onChange","e","target","_Fragment","map","prev","max","disabled","min"],"sourceRoot":""}