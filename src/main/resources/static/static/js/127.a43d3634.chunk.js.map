{"version":3,"file":"static/js/127.a43d3634.chunk.js","mappings":"uKAKA,MAkHA,EAlHaA,KACT,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,IAClCG,EAAWC,IAAgBJ,EAAAA,EAAAA,UAAS,IACpCK,EAAWC,IAAgBN,EAAAA,EAAAA,UAAS,IAE3CO,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EACKC,IAAI,uDACJC,MAAMC,IACHZ,EAAeY,EAASC,KAAK,IAEhCC,OAAOC,IACJC,QAAQD,MAAM,8BAA+BA,EAAM,GACrD,GACP,IAEH,MAYME,EAAiBA,CAACC,EAAOC,EAAqBC,EAAOC,KAEnDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wBAAuBC,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sBAAqBC,SAAEN,KACrCI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,UACIF,UAAU,oCACVG,QAASA,IAbVC,EAACN,EAAUD,KACtBA,EAAQ,GACRC,EAASD,EAAQ,EACrB,EAU+BO,CAAWN,EAAUD,GACpCQ,SAAoB,IAAVR,EAAYI,SACzB,YAGDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,SAC1BL,EACIU,MAAMT,EAAOA,EAAQ,GACrBU,KAAKC,IACFT,EAAAA,EAAAA,MAAA,OAAyBC,UAAU,YAAWC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,OACIO,IAC6B,gBAAzBD,EAAWE,UACL,sBAAqB,sBAAAC,OACCH,EAAWE,WAE3CE,IAAKJ,EAAWK,KAChBb,UAAU,qBAEdE,EAAAA,EAAAA,KAAA,MAAIF,UAAU,kBAAiBC,SAAEO,EAAWK,SAVtCL,EAAWM,SAcjCZ,EAAAA,EAAAA,KAAA,UACIF,UAAU,qCACVG,QAASA,IA5CVY,EAACjB,EAAUD,EAAOmB,KAC7BnB,EAAQ,EAAImB,EAAMC,QAClBnB,EAASD,EAAQ,EACrB,EA0CoBkB,CAAWjB,EAAUD,EAAOD,GAEhCS,SAAUR,EAAQ,GAAKD,EAAoBqB,OAAOhB,SACrD,iBAQXiB,EAAiB1C,EAClB8B,QACAa,MACG,CAACC,EAAGC,KAAC,IAAAC,EAAAC,EAAA,OACQ,QAATD,EAAAD,EAAEG,eAAO,IAAAF,OAAA,EAATA,EAAWL,SAAkB,QAAZM,EAAGH,EAAEI,eAAO,IAAAD,OAAA,EAATA,EAAWN,SAAUI,EAAEI,YAAcL,EAAEK,WAAW,IAG5EC,EAAkBlD,EAAYmD,QAAQnB,IAAU,IAAAoB,EAAA,OACnC,QADmCA,EAClDpB,EAAWqB,YAAI,IAAAD,OAAA,EAAfA,EAAiBE,SAAS,eAAK,IAG7BC,EAAkBvD,EAAYmD,QAAQnB,IAAU,IAAAwB,EAAA,OACnC,QADmCA,EAClDxB,EAAWqB,YAAI,IAAAG,OAAA,EAAfA,EAAiBF,SAAS,2BAAO,IAGrC,OACI5B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAY,CAAAhC,UACTF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC1BP,EACG,2FACAwB,EACAvC,EACAC,GAEHc,EACG,qGACAgC,EACA7C,EACAC,GAEHY,EACG,gHACAqC,EACAhD,EACAC,OAGG,C","sources":["pages/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DiningLayout from \"../layouts/DiningLayout\";\r\nimport \"../css/Main.css\";\r\n\r\nconst Main = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [hotIndex, setHotIndex] = useState(0);\r\n    const [soloIndex, setSoloIndex] = useState(0);\r\n    const [safeIndex, setSafeIndex] = useState(0);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:18080/api/restaurants-with-reviews\")\r\n            .then((response) => {\r\n                setRestaurants(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error fetching restaurants:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const handleNext = (setIndex, index, items) => {\r\n        if (index + 4 < items.length) {\r\n            setIndex(index + 1);\r\n        }\r\n    };\r\n\r\n    const handlePrev = (setIndex, index) => {\r\n        if (index > 0) {\r\n            setIndex(index - 1);\r\n        }\r\n    };\r\n\r\n    const renderCategory = (title, filteredRestaurants, index, setIndex) => {\r\n        return (\r\n            <div className=\"main-category-section\">\r\n                <h2 className=\"main-category-title\">{title}</h2>\r\n                <div className=\"main-carousel-container\">\r\n                    <button\r\n                        className=\"main-arrow-button main-left-arrow\"\r\n                        onClick={() => handlePrev(setIndex, index)}\r\n                        disabled={index === 0}\r\n                    >\r\n                        ◀\r\n                    </button>\r\n                    <div className=\"main-card-list\">\r\n                        {filteredRestaurants\r\n                            .slice(index, index + 3)\r\n                            .map((restaurant) => (\r\n                                <div key={restaurant.id} className=\"main-card\">\r\n                                    <img\r\n                                        src={\r\n                                            restaurant.photoName === \"default.jpg\"\r\n                                                ? \"/images/default.jpg\"\r\n                                                : `/images/restaurant/${restaurant.photoName}`\r\n                                        }\r\n                                        alt={restaurant.name}\r\n                                        className=\"main-card-image\"\r\n                                    />\r\n                                    <h3 className=\"main-card-title\">{restaurant.name}</h3>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                    <button\r\n                        className=\"main-arrow-button main-right-arrow\"\r\n                        onClick={() =>\r\n                            handleNext(setIndex, index, filteredRestaurants)\r\n                        }\r\n                        disabled={index + 3 >= filteredRestaurants.length}\r\n                    >\r\n                        ▶\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const hotRestaurants = restaurants\r\n        .slice()\r\n        .sort(\r\n            (a, b) =>\r\n                b.reviews?.length - a.reviews?.length || b.scoreNumber - a.scoreNumber\r\n        );\r\n\r\n    const soloRestaurants = restaurants.filter((restaurant) =>\r\n        restaurant.tags?.includes(\"혼밥\")\r\n    );\r\n\r\n    const safeRestaurants = restaurants.filter((restaurant) =>\r\n        restaurant.tags?.includes(\"안심식당\")\r\n    );\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"main-container\">\r\n                {renderCategory(\r\n                    \"HOT 음식점 추천 (리뷰 많은 순서대로)\",\r\n                    hotRestaurants,\r\n                    hotIndex,\r\n                    setHotIndex\r\n                )}\r\n                {renderCategory(\r\n                    \"혼밥 식당 추천 (태그 혼밥 있는 식당만)\",\r\n                    soloRestaurants,\r\n                    soloIndex,\r\n                    setSoloIndex\r\n                )}\r\n                {renderCategory(\r\n                    \"안심식당 추천 (태그 안심식당 있는 식당만)\",\r\n                    safeRestaurants,\r\n                    safeIndex,\r\n                    setSafeIndex\r\n                )}\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Main;"],"names":["Main","restaurants","setRestaurants","useState","hotIndex","setHotIndex","soloIndex","setSoloIndex","safeIndex","setSafeIndex","useEffect","axios","get","then","response","data","catch","error","console","renderCategory","title","filteredRestaurants","index","setIndex","_jsxs","className","children","_jsx","onClick","handlePrev","disabled","slice","map","restaurant","src","photoName","concat","alt","name","id","handleNext","items","length","hotRestaurants","sort","a","b","_b$reviews","_a$reviews","reviews","scoreNumber","soloRestaurants","filter","_restaurant$tags","tags","includes","safeRestaurants","_restaurant$tags2","DiningLayout"],"sourceRoot":""}