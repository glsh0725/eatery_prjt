{"version":3,"file":"static/js/685.bb13772c.chunk.js","mappings":"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","sources":["pages/Userinfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport DiningLayout from \"../layouts/DiningLayout\";\nimport \"../css/Userinfo.css\";\nimport alert from \"sweetalert2\";\n\nconst Userinfo = () => {\n    const [formData, setFormData] = useState({\n        currentPassword: \"\",\n        newPassword: \"\",\n        confirmNewPassword: \"\",\n        email: \"\",\n        emailAgree: \"\",\n        nickname: \"\",\n    });\n\n    useEffect(() => {\n        // JWT에서 email_status 값을 추출해 초기값 설정\n        const token = localStorage.getItem(\"token\"); // JWT 토큰 가져오기\n        if (token) {\n            try {\n                const decoded = jwtDecode(token);\n                setFormData((prevFormData) => ({\n                    ...prevFormData,\n                    email: decoded.email || \"\",\n                    emailAgree: decoded.email_status === \"y\" ? \"y\" : \"n\",\n                    nickname: decoded.mem_nickname || \"\",\n                }));\n            } catch (error) {\n                console.error(\"Invalid token:\", error);\n                alert.fire(\"오류\", \"유효하지 않은 토큰입니다. 다시 로그인해주세요.\", \"error\");\n                localStorage.removeItem(\"token\");\n                window.location.href = \"/login\"; // 로그인 페이지로 리다이렉트\n            }\n        }\n    }, []);\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value,\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // 비밀번호 검증\n        if (formData.newPassword !== formData.confirmNewPassword) {\n            await alert.fire(\"오류\", \"변경할 비밀번호가 일치하지 않습니다.\", \"error\");\n            return;\n        }\n\n        try {\n            const response = await fetch(\"/api/userupdate\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(formData),\n            });\n\n            const result = await response.json();\n            if (result.success) {\n                await alert.fire(\"성공\", \"회원정보가 성공적으로 업데이트되었습니다.\", \"success\");\n            } else {\n                await alert.fire(\"오류\", result.message || \"업데이트에 실패했습니다.\", \"error\");\n            }\n        } catch (error) {\n            await alert.fire(\"오류\", \"서버와의 통신에 실패했습니다.\", \"error\");\n        }\n    };\n\n    const handleDeleteAccount = () => {\n        alert.fire({\n            title: \"정말 탈퇴하시겠습니까?\",\n            text: \"탈퇴 시 계정이 삭제됩니다.\",\n            icon: \"warning\",\n            showCancelButton: true,\n            confirmButtonText: \"확인\",\n            cancelButtonText: \"취소\",\n        }).then(async (result) => {\n            if (result.isConfirmed) {\n                try {\n                    const response = await fetch(\"/api/userdelete\", {\n                        method: \"DELETE\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                        },\n                    });\n\n                    const result = await response.json();\n                    if (result.success) {\n                        await alert.fire(\"탈퇴 완료\", \"계정이 삭제되었습니다.\", \"success\");\n                        localStorage.removeItem(\"token\"); // 토큰 삭제\n                        window.location.href = \"/login\"; // 로그아웃 후 리다이렉트\n                    } else {\n                        await alert.fire(\"오류\", result.message || \"탈퇴에 실패했습니다.\", \"error\");\n                    }\n                } catch (error) {\n                    await alert.fire(\"오류\", \"서버와의 통신에 실패했습니다.\", \"error\");\n                }\n            }\n        });\n    };\n\n    return (\n        <DiningLayout>\n            <div className=\"userinfo_form\">\n                <form onSubmit={handleSubmit}>\n                    <p className=\"form_title\">회원정보 수정</p>\n\n                    <div className=\"form_item\">\n                        <input\n                            type=\"text\"\n                            name=\"nickname\"\n                            className=\"input_userinfo\"\n                            placeholder=\"닉네임\"\n                            value={formData.nickname}\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n\n                    <div className=\"form_item\">\n                        <input\n                            type=\"password\"\n                            name=\"currentPassword\"\n                            className=\"input_userinfo\"\n                            placeholder=\"현재 비밀번호\"\n                            value={formData.currentPassword}\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n\n                    <div className=\"form_item\">\n                        <input\n                            type=\"password\"\n                            name=\"newPassword\"\n                            className=\"input_userinfo\"\n                            placeholder=\"변경할 비밀번호\"\n                            value={formData.newPassword}\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form_item\">\n                        <input\n                            type=\"password\"\n                            name=\"confirmNewPassword\"\n                            className=\"input_userinfo\"\n                            placeholder=\"변경할 비밀번호 확인\"\n                            value={formData.confirmNewPassword}\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <div className=\"form_item\">\n                        <input\n                            type=\"email\"\n                            name=\"email\"\n                            className=\"input_userinfo\"\n                            placeholder=\"이메일\"\n                            value={formData.email}\n                            onChange={handleChange}\n                            required\n                        />\n                    </div>\n\n                    <div className=\"form_item radio_agree\">\n                        <label>\n                            <input\n                                type=\"radio\"\n                                name=\"emailAgree\"\n                                value=\"y\"\n                                checked={formData.emailAgree === \"y\"}\n                                onChange={handleChange}\n                            />\n                            이메일 수신 동의\n                        </label>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                name=\"emailAgree\"\n                                value=\"n\"\n                                checked={formData.emailAgree === \"n\"}\n                                onChange={handleChange}\n                            />\n                            이메일 수신 거부\n                        </label>\n                    </div>\n\n                    <div className=\"form_item delete_account\" onClick={handleDeleteAccount}>\n                        회원탈퇴\n                    </div>\n\n                    <div className=\"form_item\">\n                        <button type=\"submit\" className=\"btn_save_button\">\n                            저장\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </DiningLayout>\n    );\n};\n\nexport default Userinfo;\n"],"names":["Userinfo","formData","setFormData","useState","currentPassword","newPassword","confirmNewPassword","email","emailAgree","nickname","useEffect","token","localStorage","getItem","decoded","jwtDecode","prevFormData","_objectSpread","email_status","mem_nickname","error","console","alert","removeItem","window","location","href","handleChange","e","name","value","target","_jsx","DiningLayout","children","className","_jsxs","onSubmit","async","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","type","placeholder","onChange","required","checked","onClick","handleDeleteAccount","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","isConfirmed"],"sourceRoot":""}