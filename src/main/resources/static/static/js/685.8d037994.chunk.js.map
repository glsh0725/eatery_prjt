{"version":3,"file":"static/js/685.8d037994.chunk.js","mappings":"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","sources":["pages/Userinfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport DiningLayout from \"../layouts/DiningLayout\";\r\nimport \"../css/Userinfo.css\";\r\nimport alert from \"sweetalert2\";\r\n\r\nconst Userinfo = () => {\r\n    const [formData, setFormData] = useState({\r\n        currentPassword: \"\",\r\n        newPassword: \"\",\r\n        confirmNewPassword: \"\",\r\n        email: \"\",\r\n        emailAgree: \"\",\r\n        nickname: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        // JWT에서 email_status 값을 추출해 초기값 설정\r\n        const token = localStorage.getItem(\"token\"); // JWT 토큰 가져오기\r\n        if (token) {\r\n            try {\r\n                const decoded = jwtDecode(token);\r\n                setFormData((prevFormData) => ({\r\n                    ...prevFormData,\r\n                    email: decoded.email || \"\",\r\n                    emailAgree: decoded.email_status === \"y\" ? \"y\" : \"n\",\r\n                    nickname: decoded.mem_nickname || \"\",\r\n                }));\r\n            } catch (error) {\r\n                console.error(\"Invalid token:\", error);\r\n                alert.fire(\"오류\", \"유효하지 않은 토큰입니다. 다시 로그인해주세요.\", \"error\");\r\n                localStorage.removeItem(\"token\");\r\n                window.location.href = \"/login\"; // 로그인 페이지로 리다이렉트\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({\r\n            ...formData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // 비밀번호 검증\r\n        if (formData.newPassword !== formData.confirmNewPassword) {\r\n            await alert.fire(\"오류\", \"변경할 비밀번호가 일치하지 않습니다.\", \"error\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"/api/userupdate\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const result = await response.json();\r\n            if (result.success) {\r\n                await alert.fire(\"성공\", \"회원정보가 성공적으로 업데이트되었습니다.\", \"success\");\r\n            } else {\r\n                await alert.fire(\"오류\", result.message || \"업데이트에 실패했습니다.\", \"error\");\r\n            }\r\n        } catch (error) {\r\n            await alert.fire(\"오류\", \"서버와의 통신에 실패했습니다.\", \"error\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteAccount = () => {\r\n        alert.fire({\r\n            title: \"정말 탈퇴하시겠습니까?\",\r\n            text: \"탈퇴 시 계정이 삭제됩니다.\",\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonText: \"확인\",\r\n            cancelButtonText: \"취소\",\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n                try {\r\n                    const response = await fetch(\"/api/userdelete\", {\r\n                        method: \"DELETE\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                        },\r\n                    });\r\n\r\n                    const result = await response.json();\r\n                    if (result.success) {\r\n                        await alert.fire(\"탈퇴 완료\", \"계정이 삭제되었습니다.\", \"success\");\r\n                        localStorage.removeItem(\"token\"); // 토큰 삭제\r\n                        window.location.href = \"/login\"; // 로그아웃 후 리다이렉트\r\n                    } else {\r\n                        await alert.fire(\"오류\", result.message || \"탈퇴에 실패했습니다.\", \"error\");\r\n                    }\r\n                } catch (error) {\r\n                    await alert.fire(\"오류\", \"서버와의 통신에 실패했습니다.\", \"error\");\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"userinfo_form\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <p className=\"form_title\">회원정보 수정</p>\r\n\r\n                    <div className=\"form_item\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nickname\"\r\n                            className=\"input_userinfo\"\r\n                            placeholder=\"닉네임\"\r\n                            value={formData.nickname}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_item\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"currentPassword\"\r\n                            className=\"input_userinfo\"\r\n                            placeholder=\"현재 비밀번호\"\r\n                            value={formData.currentPassword}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_item\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"newPassword\"\r\n                            className=\"input_userinfo\"\r\n                            placeholder=\"변경할 비밀번호\"\r\n                            value={formData.newPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_item\">\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"confirmNewPassword\"\r\n                            className=\"input_userinfo\"\r\n                            placeholder=\"변경할 비밀번호 확인\"\r\n                            value={formData.confirmNewPassword}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_item\">\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className=\"input_userinfo\"\r\n                            placeholder=\"이메일\"\r\n                            value={formData.email}\r\n                            onChange={handleChange}\r\n                            required\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form_item radio_agree\">\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"emailAgree\"\r\n                                value=\"y\"\r\n                                checked={formData.emailAgree === \"y\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            이메일 수신 동의\r\n                        </label>\r\n                        <label>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"emailAgree\"\r\n                                value=\"n\"\r\n                                checked={formData.emailAgree === \"n\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            이메일 수신 거부\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form_item\">\r\n                        <button type=\"submit\" className=\"btn_save_button\">\r\n                            저장\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"form_item delete_account\" onClick={handleDeleteAccount}>\r\n                        회원탈퇴\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Userinfo;\r\n"],"names":["Userinfo","formData","setFormData","useState","currentPassword","newPassword","confirmNewPassword","email","emailAgree","nickname","useEffect","token","localStorage","getItem","decoded","jwtDecode","prevFormData","_objectSpread","email_status","mem_nickname","error","console","alert","removeItem","window","location","href","handleChange","e","name","value","target","_jsx","DiningLayout","children","className","_jsxs","onSubmit","async","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","success","message","type","placeholder","onChange","required","checked","onClick","handleDeleteAccount","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","isConfirmed"],"sourceRoot":""}