{"version":3,"file":"static/js/187.464308f4.chunk.js","mappings":"uKAKA,MAiEA,EAjEmBA,KACf,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,KACxCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IACxCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAGnCK,EAAAA,EAAAA,YAAU,KACNC,EAAAA,EAAMC,IAAI,0CACLC,MAAMC,IACHV,EAAeU,EAASC,KAAK,IAEhCC,OAAOR,IACJC,EAASD,EAAMS,SACfC,QAAQV,MAAM,8BAA+BA,EAAM,GACrD,GACP,IAEH,MAAMW,EAAoBC,IACJ,SAAdA,GAAwBd,EAAce,KAAKC,KAAKnB,EAAYoB,OAd/C,GAebhB,EAAeD,EAAc,GACR,SAAdc,GAAwBd,EAAc,GAC7CC,EAAeD,EAAc,EACjC,EAGEkB,EArBe,EAqBGlB,EAClBmB,EAAmBD,EAtBJ,EAuBfE,EAAevB,EAAYwB,MAAMF,EAAkBD,GAEzD,OACII,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACTC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBF,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OACII,UAAU,aACVC,QAASA,IAAMd,EAAiB,QAChCe,MAAO,CAAEC,WAA4B,IAAhB7B,EAAoB,SAAW,WAAYwB,SACnE,YAGDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBF,SAAA,CAC3BtB,IAASuB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAeF,SAAA,CAAC,iBAAKtB,KAC3CkB,EAAaU,KAAI,CAACC,EAAYC,KAC3BP,EAAAA,EAAAA,MAAA,OAAiBC,UAAU,kBAAiBF,SAAA,EACxCF,EAAAA,EAAAA,KAAA,OACIW,IAAG,sBAAAC,OAAwBH,EAAWI,WAAa,eACnDC,IAAKL,EAAWM,QAEpBf,EAAAA,EAAAA,KAAA,MAAAE,SAAKO,EAAWM,QAChBZ,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,6BAAOO,EAAWO,UAAY,gCACjChB,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cAPEQ,SAWlBV,EAAAA,EAAAA,KAAA,OACII,UAAU,cACVC,QAASA,IAAMd,EAAiB,QAChCe,MAAO,CAAEC,WAAY7B,IAAgBe,KAAKC,KAAKnB,EAAYoB,OApDtD,GAoD+E,SAAW,WAAYO,SAC9G,eAIM,C","sources":["pages/Find_store.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport DiningLayout from \"../layouts/DiningLayout\";\r\nimport \"../css/Find_store.css\";\r\n\r\nconst Find_store = () => {\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [error, setError] = useState(\"\");\r\n    const itemsPerPage = 8;\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:18080/api/restaurants\")\r\n            .then((response) => {\r\n                setRestaurants(response.data);\r\n            })\r\n            .catch((error) => {\r\n                setError(error.message);\r\n                console.error(\"Error fetching restaurants:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const handlePageChange = (direction) => {\r\n        if (direction === \"next\" && currentPage < Math.ceil(restaurants.length / itemsPerPage)) {\r\n            setCurrentPage(currentPage + 1);\r\n        } else if (direction === \"prev\" && currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n\r\n    const indexOfLastItem = currentPage * itemsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n    const currentItems = restaurants.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n    return (\r\n        <DiningLayout>\r\n            <div className=\"find-store-container\">\r\n                <div\r\n                    className=\"left-arrow\"\r\n                    onClick={() => handlePageChange(\"prev\")}\r\n                    style={{ visibility: currentPage === 1 ? \"hidden\" : \"visible\" }}\r\n                >\r\n                    ◀\r\n                </div>\r\n                <div className=\"restaurant-list\">\r\n                    {error && <p className=\"error-message\">오류: {error}</p>}\r\n                    {currentItems.map((restaurant, index) => (\r\n                        <div key={index} className=\"restaurant-card\">\r\n                            <img\r\n                                src={`/images/restaurant/${restaurant.photoName || \"default.jpg\"}`}\r\n                                alt={restaurant.name}\r\n                            />\r\n                            <h2>{restaurant.name}</h2>\r\n                            <p>대표메뉴: {restaurant.category || \"정보 없음\"}</p>\r\n                            <h3>⭐ </h3>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div\r\n                    className=\"right-arrow\"\r\n                    onClick={() => handlePageChange(\"next\")}\r\n                    style={{ visibility: currentPage === Math.ceil(restaurants.length / itemsPerPage) ? \"hidden\" : \"visible\" }}\r\n                >\r\n                    ▶\r\n                </div>\r\n            </div>\r\n        </DiningLayout>\r\n    );\r\n};\r\n\r\nexport default Find_store;"],"names":["Find_store","restaurants","setRestaurants","useState","currentPage","setCurrentPage","error","setError","useEffect","axios","get","then","response","data","catch","message","console","handlePageChange","direction","Math","ceil","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","_jsx","DiningLayout","children","_jsxs","className","onClick","style","visibility","map","restaurant","index","src","concat","photoName","alt","name","category"],"sourceRoot":""}