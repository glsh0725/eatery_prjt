{"version":3,"file":"static/js/392.6b26d841.chunk.js","mappings":"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","sources":["components/find_store/RestaurantDetail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../../css/RestaurantDetail.css\";\n\nconst RestaurantDetail = () => {\n    const { name } = useParams();\n    const [restaurant, setRestaurant] = useState(null);\n    const [users, setUsers] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [showModal, setShowModal] = useState(false);\n    const [showReportModal, setShowReportModal] = useState(false);\n    const [showWriteReviewModal, setShowWriteReviewModal] = useState(false);\n    const [selectedReason, setSelectedReason] = useState(\"spam\");\n    const [reviews, setReviews] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const reviewsPerPage = 3;\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const restaurantResponse = await axios.get(`http://localhost:18080/api/restaurants/${name}`);\n                setRestaurant(restaurantResponse.data);\n\n                const restaurantName = name;\n\n                const reviewsResponse = await axios.get(`http://localhost:18080/api/reviews/${restaurantName}`);\n                setReviews(reviewsResponse.data);\n\n                const usersResponse = await axios.get(`http://localhost:18080/api/users`);\n                setUsers(usersResponse.data);\n            } catch (err) {\n                setError(err.message);\n            }\n        };\n\n        fetchData();\n    }, [name]);\n\n    const handleMoreReviewsClick = () => {\n        setShowModal(true);\n    };\n\n    const closeModal = () => {\n        setShowModal(false);\n    };\n\n    const openReportModal = () => {\n        setShowReportModal(true);\n    };\n\n    const closeReportModal = () => {\n        setShowReportModal(false);\n    };\n\n    const handleReasonChange = (event) => {\n        setSelectedReason(event.target.value);\n    };\n\n    const openWriteReviewModal = () => {\n        setShowWriteReviewModal(true);\n    };\n\n    const closeWriteReviewModal = () => {\n        setShowWriteReviewModal(false);\n    };\n\n    const startIndex = (currentPage - 1) * reviewsPerPage;\n    const currentReviews = reviews.slice(startIndex, startIndex + reviewsPerPage);\n\n    const handleNextPage = () => {\n        if (currentPage < Math.ceil(reviews.length / reviewsPerPage)) {\n            setCurrentPage((prevPage) => prevPage + 1);\n        }\n    };\n\n    const handlePrevPage = () => {\n        if (currentPage > 1) {\n            setCurrentPage((prevPage) => prevPage - 1);\n        }\n    };\n\n    if (error) {\n        return <div>오류: {error}</div>;\n    }\n\n    if (!restaurant) {\n        return <div>로딩 중...</div>;\n    }\n\n    return (\n        <div className=\"restaurant-detail\">\n            <div className=\"top-section\">\n                <div className=\"image-box\">\n                    <img\n                        src={\n                            restaurant.menuName === \"default.jpg\"\n                                ? \"/images/default.jpg\"\n                                : `/images/menu/${restaurant.menuName}`\n                        }\n                        alt={restaurant.name}\n                    />\n                </div>\n                <div\n                    className=\"map-box\"\n                    style={{height: \"320px\", overflow: \"hidden\", position: \"relative\"}}\n                >\n                    <iframe\n                        src={`https://map.naver.com/v5/search/${encodeURIComponent(restaurant.address)}`}\n                        width=\"230%\"\n                        height=\"100%\"\n                        style={{\n                            border: \"none\",\n                            position: \"absolute\",\n                            top: 0,\n                            left: \"-130%\",\n                        }}\n                        allowFullScreen\n                        title=\"Naver Map\"\n                    ></iframe>\n                </div>\n            </div>\n            <div className=\"title-and-actions\">\n                <h2>\n                    {restaurant.name} <span className=\"rating\">{restaurant.scoreNumber}</span>\n                </h2>\n                <div className=\"actions\">\n                    <span>⭐ 즐겨찾기</span>\n                    <span>❤️ 좋아요 {restaurant.likeCount || 0}</span>\n                    <span>👀 조회수 {restaurant.viewCount || 0}</span>\n                </div>\n            </div>\n            <div className=\"main-section\">\n                <div className=\"details\">\n                    <p>영업시간: {restaurant.openTime || \"정보 없음\"}</p>\n                    <p>휴게시간: {restaurant.breakTime || \"정보 없음\"}</p>\n                    <p>휴무일: {restaurant.offDays || \"정보 없음\"}</p>\n                    <p>\n                        주소: {restaurant.address || \"정보 없음\"} (지번: {restaurant.oldAddress || \"정보 없음\"})\n                    </p>\n                    <p>전화번호: {restaurant.phoneNumber || \"정보 없음\"}</p>\n                    {restaurant.homepage && restaurant.homepage !== \"홈페이지 정보 없음\" ? (\n                        <p>\n                            홈페이지:{\" \"}\n                            <a\n                                href={\n                                    restaurant.homepage.startsWith(\"http\")\n                                        ? restaurant.homepage\n                                        : `https://${restaurant.homepage}`\n                                }\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                {restaurant.homepage}\n                            </a>\n                        </p>\n                    ) : (\n                        <p>홈페이지: 정보 없음</p>\n                    )}\n                    <p>주차: {restaurant.parkingInfo || \"정보 없음\"}</p>\n                    <p>관련 태그: {restaurant.tags || \"정보 없음\"}</p>\n                </div>\n                <div className=\"reviews-section\">\n                    <div className=\"reviews-header\">\n                        <h3>리뷰 ({reviews.length})</h3>\n                        <button className=\"review-button\" onClick={openWriteReviewModal}>리뷰 작성 ∨</button>\n                    </div>\n                    <div className=\"review-list\">\n                        {reviews\n                            .sort((a, b) => b.reviewNumber - a.reviewNumber)\n                            .slice(0, 2)\n                            .map((review, index) => {\n                                const user = users.find((user) => user.mem_id === review.memberId);\n\n                                return (\n                                    <div key={index} className=\"review-item\">\n                                        <p>\n                                            {user ? user.mem_nickname : \"알 수 없음\"}{\" \"}\n                                            <span className=\"rating\">{review.reviewScore.toFixed(1)}</span>\n                                        </p>\n                                        <div className=\"review-content\">{review.reviewContent}</div>\n                                        {review.reviewPhotoName && (\n                                            <div className=\"review-image\">\n                                                <img\n                                                    src={`/images/reviews/${review.reviewPhotoName}`}\n                                                    alt=\"리뷰 이미지\"\n                                                />\n                                            </div>\n                                        )}\n                                        <div className=\"review-actions\">\n                                            ❤️ 좋아요 {review.reviewLikes || 0}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                    </div>\n                    <button className=\"more-reviews\" onClick={handleMoreReviewsClick}>\n                        리뷰 더보기 +\n                    </button>\n                </div>\n            </div>\n\n            {\n                showModal && (\n                    <div className=\"modal-overlay\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h2>리뷰 목록 ({reviews.length})</h2>\n                                <button className=\"write-review-btn\" onClick={openWriteReviewModal}>리뷰 작성 ∨</button>\n                                <button className=\"close-modal\" onClick={closeModal}>\n                                    X\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                {reviews.length > 0 ? (\n                                    <div className=\"review-container\">\n                                        <div className=\"review-list\">\n                                            {currentReviews.map((review, index) => {\n                                                const user = users.find((user) => user.mem_id === review.memberId);\n\n                                                return (\n                                                    <div key={index} className=\"review-item\">\n                                                        <div className=\"review-header\">\n                                                            <div className=\"review-info\">\n                                                                <strong>{user ? user.mem_nickname : \"알 수 없음\"}</strong>{\" \"}\n                                                                <span className=\"rating\">{parseFloat(review.reviewScore).toFixed(1)}</span>\n                                                                <span className=\"report\" onClick={openReportModal}>🚨 신고</span>\n                                                            </div>\n                                                            <div className=\"review-actions\">\n                                                                <button className=\"edit-btn\">수정</button>\n                                                                <button className=\"delete-btn\">삭제</button>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"review-content\">{review.reviewContent}</div>\n                                                        <div className=\"review-container\">\n                                                            {review.reviewPhotoName && (\n                                                                <div className=\"review-image\">\n                                                                    <a\n                                                                        href={`/images/reviews/${review.reviewPhotoName}`}\n                                                                        target=\"_blank\"\n                                                                        rel=\"noopener noreferrer\"\n                                                                    >\n                                                                        <img\n                                                                            src={`/images/reviews/${review.reviewPhotoName}`}\n                                                                            alt=\"리뷰 이미지\"\n                                                                        />\n                                                                    </a>\n                                                                </div>\n                                                            )}\n                                                            <div className=\"review-footer\">\n                                                                <span>❤️ 좋아요 {review.reviewLikes || 0}</span>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                );\n                                            })}\n                                        </div>\n                                        <div className=\"pagination-controls\">\n                                            <button onClick={handlePrevPage} disabled={currentPage === 1}>\n                                                ∧\n                                            </button>\n                                            <button\n                                                onClick={handleNextPage}\n                                                disabled={currentPage === Math.ceil(reviews.length / reviewsPerPage)}\n                                            >\n                                                ∨\n                                            </button>\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <p>리뷰가 없습니다.</p>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                )\n            }\n            {showReportModal && (\n                <div className=\"report-modal-overlay\">\n                    <div className=\"report-modal-content\" onClick={(e) => e.stopPropagation()}>\n                        <div className=\"report-modal-header\">\n                            <h2>신고하기</h2>\n                            <button className=\"close-report-modal\" onClick={closeReportModal}>\n                                X\n                            </button>\n                        </div>\n                        <div className=\"report-modal-body\">\n                            <p>\n                                <strong>작성자</strong> | 닉네임1\n                            </p>\n                            <p>\n                                <strong>제목</strong> | 제목\n                            </p>\n                            <div className=\"report-options\">\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"reportReason\"\n                                        value=\"spam\"\n                                        checked={selectedReason === \"spam\"}\n                                        onChange={handleReasonChange}\n                                    />\n                                    스팸홍보/도배입니다.\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"reportReason\"\n                                        value=\"obscene\"\n                                        checked={selectedReason === \"obscene\"}\n                                        onChange={handleReasonChange}\n                                    />\n                                    음란물입니다.\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"reportReason\"\n                                        value=\"illegal\"\n                                        checked={selectedReason === \"illegal\"}\n                                        onChange={handleReasonChange}\n                                    />\n                                    불법정보를 포함하고 있습니다.\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"reportReason\"\n                                        value=\"harmful\"\n                                        checked={selectedReason === \"harmful\"}\n                                        onChange={handleReasonChange}\n                                    />\n                                    청소년에게 유해한 내용입니다.\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"reportReason\"\n                                        value=\"offensive\"\n                                        checked={selectedReason === \"offensive\"}\n                                        onChange={handleReasonChange}\n                                    />\n                                    욕설/생명경시/혐오/차별적 표현입니다.\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"reportReason\"\n                                        value=\"privacy\"\n                                        checked={selectedReason === \"privacy\"}\n                                        onChange={handleReasonChange}\n                                    />\n                                    개인정보가 노출되었습니다.\n                                </label>\n                                <label>\n                                    <input\n                                        type=\"radio\"\n                                        name=\"reportReason\"\n                                        value=\"custom\"\n                                        checked={selectedReason === \"custom\"}\n                                        onChange={handleReasonChange}\n                                    />\n                                    직접 입력하기.\n                                </label>\n                            </div>\n                            <textarea\n                                className=\"report-custom-input\"\n                                placeholder=\"사유를 입력해주세요\"\n                                disabled={selectedReason !== \"custom\"}\n                            ></textarea>\n                        </div>\n                        <div className=\"report-modal-footer\">\n                            <button className=\"submit-btn\">\n                                신고하기\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n            {showWriteReviewModal && (\n                <div className=\"modal-overlay\">\n                    <div className=\"review-write-modal-content\">\n                        <div className=\"review-write-modal-header\">\n                            <h2>리뷰 작성</h2>\n                            <button className=\"close-review-write-modal\" onClick={closeWriteReviewModal}>\n                                X\n                            </button>\n                        </div>\n                        <div className=\"review-write-modal-body\">\n                            <div className=\"review-write-actions\">\n                                <button className=\"review-write-rating-btn\">별점 등록 ▼</button>\n                                <button className=\"review-write-image-upload-btn\">이미지 첨부</button>\n                            </div>\n                            <textarea\n                                placeholder=\"내용을 입력해주세요\"\n                                className=\"review-write-content-input\"\n                            ></textarea>\n                            <div className=\"review-write-modal-footer\">\n                                <button className=\"cancel-btn\" onClick={closeWriteReviewModal}>\n                                    취소\n                                </button>\n                                <button className=\"submit-btn\">등록</button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RestaurantDetail;"],"names":["RestaurantDetail","name","useParams","restaurant","setRestaurant","useState","users","setUsers","error","setError","showModal","setShowModal","showReportModal","setShowReportModal","showWriteReviewModal","setShowWriteReviewModal","selectedReason","setSelectedReason","reviews","setReviews","currentPage","setCurrentPage","useEffect","async","restaurantResponse","axios","get","concat","data","restaurantName","reviewsResponse","usersResponse","err","message","fetchData","openReportModal","handleReasonChange","event","target","value","openWriteReviewModal","closeWriteReviewModal","startIndex","currentReviews","slice","_jsxs","children","className","_jsx","src","menuName","alt","style","height","overflow","position","encodeURIComponent","address","width","border","top","left","allowFullScreen","title","scoreNumber","likeCount","viewCount","openTime","breakTime","offDays","oldAddress","phoneNumber","homepage","href","startsWith","rel","parkingInfo","tags","length","onClick","sort","a","b","reviewNumber","map","review","index","user","find","mem_id","memberId","mem_nickname","reviewScore","toFixed","reviewContent","reviewPhotoName","reviewLikes","handleMoreReviewsClick","closeModal","parseFloat","handlePrevPage","prevPage","disabled","handleNextPage","Math","ceil","e","stopPropagation","closeReportModal","type","checked","onChange","placeholder"],"sourceRoot":""}