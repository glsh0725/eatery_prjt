{"version":3,"file":"static/js/269.faed8b7e.chunk.js","mappings":"8MASA,MAyFA,EAzFcA,KACV,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAC9BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,IA+CrC,OACIG,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACTC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAaC,SA/ChBC,UACjBC,EAAEC,iBACF,IACI,MAKMC,SALiBC,EAAAA,EAAMC,KAAK,sCAAuC,CACrEhB,SACAG,YAGmBc,QAAuB,cAC9C,GAAIH,EAAO,CACP,MAAMI,EAAaJ,EAAMK,WAAW,WAAaL,EAAMM,MAAM,KAAK,GAAKN,ECvB7DA,KACxBO,aAAaC,QAAQ,YAAaR,EAAM,EDuB1BS,CAAUL,GAEV,MAAMM,GAAUC,EAAAA,EAAAA,GAAUP,GAC1BQ,QAAQC,IAAI,eAAgBH,GAE5BI,OAAOC,cAAc,IAAIC,MAAM,gBACzBC,IAAAA,KAAW,CACbC,KAAM,UACNC,MAAO,mCACPC,KAAM,8EACNC,kBAAmB,iBAEvBrC,EAAS,IACb,CACJ,CAAE,MAAOsC,GAAM,IAADC,EACVX,QAAQY,MAAMF,GACd,MAAMG,EACuB,OAAb,QAAZF,EAAAD,EAAII,gBAAQ,IAAAH,OAAA,EAAZA,EAAcI,QACR,6GACA,8GACJV,IAAAA,KAAW,CACbC,KAAM,QACNC,MAAO,kCACPC,KAAMK,GAEd,GAWwDhC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBACJF,EAAAA,EAAAA,KAAA,SACII,UAAU,cACViC,KAAK,OACLC,GAAG,KACHC,MAAO5C,EACP6C,SAAWjC,GAAMX,EAAUW,EAAEkC,OAAOF,OACpCG,YAAY,wBAEhB1C,EAAAA,EAAAA,KAAA,SACII,UAAU,cACViC,KAAK,WACLE,MAAOzC,EACP0C,SAAWjC,GAAMR,EAAUQ,EAAEkC,OAAOF,OACpCG,YAAY,8BAEhBvC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaF,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SAAOqC,KAAK,WAAWC,GAAG,qBAAqB,uCAEnDtC,EAAAA,EAAAA,KAAA,UAAQI,UAAU,eAAcF,SAAC,wBACjCF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,UAClBF,EAAAA,EAAAA,KAAC2C,EAAAA,GAAI,CAACC,GAAG,WAAU1C,SAAC,gCAExBF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,UAClBF,EAAAA,EAAAA,KAAC2C,EAAAA,GAAI,CAACC,GAAG,iBAAgB1C,SAAC,+DAE9BF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,UAASF,UACpBF,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAASjC,UAAU,YAAYyC,QApCzCC,KAGfvB,OAAOwB,SAASC,KAAI,qDAAAC,OAFC,kCAEmE,kBAAAA,OADnE,kCACgG,sBAAqB,EAiC9D/C,UAC5DF,EAAAA,EAAAA,KAAA,OAAKkD,IAAK,gCAAiC9C,UAAU,uBAItD,C","sources":["pages/Login.js","utils/auth.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {saveToken} from \"../utils/auth\";\nimport {Link, useNavigate} from \"react-router-dom\";\nimport DiningLayout from \"../layouts/DiningLayout\";\nimport \"../css/Login.css\";\nimport alert from 'sweetalert2';\nimport {jwtDecode} from 'jwt-decode';\n\nconst Login = () => {\n    const navigate = useNavigate();\n    const [mem_id, setMem_id] = useState(\"\");\n    const [mem_pw, setMem_pw] = useState(\"\");\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(\"http://192.168.0.61:18080/api/login\", {\n                mem_id,\n                mem_pw,\n            });\n\n            const token = response.headers[\"authorization\"];\n            if (token) {\n                const cleanToken = token.startsWith(\"Bearer \") ? token.split(\" \")[1] : token;\n                saveToken(cleanToken); // 토큰 저장\n\n                const decoded = jwtDecode(cleanToken); // 토큰 디코딩\n                console.log(\"Decoded JWT:\", decoded); // 디버깅용\n\n                window.dispatchEvent(new Event(\"login\")); // 로그인 이벤트\n                await alert.fire({\n                    icon: \"success\",\n                    title: \"로그인 성공!\",\n                    text: \"다이닝픽 회원님 환영합니다.\",\n                    confirmButtonText: '확인',\n                });\n                navigate(\"/\");\n            }\n        } catch (err) {\n            console.error(err);\n            const errorMessage =\n                err.response?.status === 401\n                    ? \"아이디 또는 비밀번호가 잘못되었습니다.\"\n                    : \"서버와의 통신 중 오류가 발생했습니다.\";\n            await alert.fire({\n                icon: \"error\",\n                title: \"로그인 실패\",\n                text: errorMessage,\n            });\n        }\n    };\n\n    const kakaoLogin = () => {\n        const REST_API_KEY = '키값 필요함';\n        const REDIRECT_URI = 'http://192.168.0.61:18080/kakao';\n        window.location.href = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code`;\n    };\n\n    return (\n        <DiningLayout>\n            <form className=\"login-form\" onSubmit={handleSubmit}>\n                <h1>로그인</h1>\n                <input\n                    className=\"input-field\"\n                    type=\"text\"\n                    id=\"id\"\n                    value={mem_id}\n                    onChange={(e) => setMem_id(e.target.value)}\n                    placeholder=\"아이디\"\n                />\n                <input\n                    className=\"input-field\"\n                    type=\"password\"\n                    value={mem_pw}\n                    onChange={(e) => setMem_pw(e.target.value)}\n                    placeholder=\"비밀번호\"\n                />\n                <div className=\"saveIdlabel\">\n                    <input type=\"checkbox\" id=\"confirm-password\" /> 아이디 저장\n                </div>\n                <button className=\"login-button\">로그인</button>\n                <div className=\"label\">\n                    <Link to=\"/Sign_up\">회원가입</Link>\n                </div>\n                <div className=\"label\">\n                    <Link to=\"/find_userinfo\">아이디/비밀번호찾기</Link>\n                </div>\n                <div className=\"display\">\n                    <button type=\"button\" className=\"kakao_btn\" onClick={kakaoLogin}>\n                        <img src={'/images/login/kakao_login.png'} className=\"kakao_auth\" />\n                    </button>\n                </div>\n            </form>\n        </DiningLayout>\n    );\n};\n\nexport default Login;","// src/utils/auth.js\nexport const saveToken = (token) => {\n  localStorage.setItem(\"authToken\", token);\n};\n\nexport const getToken = () => {\n  return localStorage.getItem(\"authToken\");\n};\n\nexport const removeToken = () => {\n  localStorage.removeItem(\"authToken\");\n};\n\nexport const isLoggedIn = () => {\n  return !!getToken();\n};\n"],"names":["Login","navigate","useNavigate","mem_id","setMem_id","useState","mem_pw","setMem_pw","_jsx","DiningLayout","children","_jsxs","className","onSubmit","async","e","preventDefault","token","axios","post","headers","cleanToken","startsWith","split","localStorage","setItem","saveToken","decoded","jwtDecode","console","log","window","dispatchEvent","Event","alert","icon","title","text","confirmButtonText","err","_err$response","error","errorMessage","response","status","type","id","value","onChange","target","placeholder","Link","to","onClick","kakaoLogin","location","href","concat","src"],"sourceRoot":""}